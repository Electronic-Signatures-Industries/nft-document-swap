{
  "contractName": "NFTDocumentMinter",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mintedBy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "contract ERC20Interface",
          "name": "paymentToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BurnSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "MinterRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "paymentAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "hasUserKyc",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "feeStructure",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "serviceFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "addToRegistry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract ERC20Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dataProviderMinters",
      "outputs": [
        {
          "internalType": "address",
          "name": "minterAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "paymentAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "hasUserKyc",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "feeStructure",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "created",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "serviceFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintedBy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minterCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minterDocumentRequestCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "minterDocumentRequests",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "userDid",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "toMinter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "toMinterDid",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "status",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minterPaymentAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingServiceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolPaymentAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolServiceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mintedBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"paymentToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BurnSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"MinterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"hasUserKyc\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feeStructure\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"addToRegistry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dataProviderMinters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"minterAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"hasUserKyc\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feeStructure\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"serviceFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minterCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minterDocumentRequestCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minterDocumentRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userDid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"toMinter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"toMinterDid\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minterPaymentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingServiceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolPaymentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolServiceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"TODO\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/NFTDocumentMinter.sol\":\"NFTDocumentMinter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/ERC20Interface.sol\":{\"keccak256\":\"0xa0127fb1b90c0c9a681c0fc1d0bfb94edf321ce52f01a82876334230d8feb777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3528c616f76bf3c68398f0adacf1728c839aa5985788280eb4e7ae0a880d38de\",\"dweb:/ipfs/QmTFLodkXqaHHAHe1uiiNuWxVJZRUBiWEg9AuUr91C11yu\"]},\"/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/MinterRegistry.sol\":{\"keccak256\":\"0x66a838d52187a6a998cd281308f84e12ae347fc1b0401734aed0a325201257bf\",\"urls\":[\"bzz-raw://15d78ff2d61e1a87da7b98c31960089716946f0875d408d79e5a76154f4affb4\",\"dweb:/ipfs/Qmba4HukU9E6F9Fb64L7FoStYopr5eovbJ7AMM1YocK2v1\"]},\"/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/NFTDocumentMinter.sol\":{\"keccak256\":\"0x67efe880b5608c5aa919ae1ff0af04a241929f834332271d4a59963b1c08fcdd\",\"urls\":[\"bzz-raw://41de8d78d0f2142cba2fbebeb3c82e26cce8524cd3c85776769fd92e60285f2f\",\"dweb:/ipfs/QmPxUvgEPJbgfxq5R88FPTJQxD589M1ADbzakfSNxhTqCd\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5a3de7f7f76e47a071195cf42e2a702265694a6b32037de709463bd8ad784fb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://678cbad1f972a4d8c9d47bc39fa6d39560b4fc143c8d9c812a63fe99bb13062e\",\"dweb:/ipfs/QmUhLDvUndcbQLakDNg9G4UXz8UPzRqC6S3rWGKupB6DYs\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0x3b9582c1b41be9bb437ad958e15d4d5665f74b976bb8da5f8546d7c7acd6c530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baf19bcfcab819327a91ac6a5b1ffadb239081101973e70dcabf0ce01b2e63c\",\"dweb:/ipfs/QmYCPzCPP8wrsnP9N93SGPhoyUPpo5ovX5R5Es6wrmmA95\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol\":{\"keccak256\":\"0x1c31a4c2ad1af9e25cd8f4ea941ebd6a6a932426183ab39c160cb8e51cfc704f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dd2448bbeb4a8f6f3273042d02326fa6ba191827e5b37f6f68492b17d022c9\",\"dweb:/ipfs/QmRiAmuxtRcVRhXUymziiTD3r8SGcjxKN95ZLVKd2jtWjN\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5a9f5c29bd7cf0b345e14d97d5f685f68c07e1e5bfdd47e5bcec045e81b0b6ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321cbaa1412fc8d013d8ad3fb5f98c0db7401ddacfb09b70828ea2cebe37397e\",\"dweb:/ipfs/Qmd3Hoc71w6rmxAR6A5VKW9at677VP1L5KDcJnyvu4ksu3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x065360ef3924db6b63c2160886b5de737497dd64a917e362dd8d857cda1f5ae2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://946fe57f3b935f0f4a41345b3eedb617c30912ba5e802bd6b430b394114048ab\",\"dweb:/ipfs/QmRVgUK6yHgqiVWoFn51aUGYejR8romW2ZqwVvSFMnhnJW\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x16b5422892fbdd9648f12e59de85b42efd57d76b6d6b2358cb46e0f6d4a71aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef38821a4ee756757dc1ce9074ef6096d1b5c760627e92c0852d788dc636ea7\",\"dweb:/ipfs/QmdGwP6BtRMcp4VVJUWwTmXEjYmL52A8WZpBdFJYmzc9pJ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200538f3803806200538f833981810160405260a08110156200003757600080fd5b810190808051906020019092919080519060200190929190805160405193929190846401000000008211156200006c57600080fd5b838201915060208201858111156200008357600080fd5b8251866001820283011164010000000082111715620000a157600080fd5b8083526020830192505050908051906020019080838360005b83811015620000d7578082015181840152602081019050620000ba565b50505050905090810190601f168015620001055780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200012957600080fd5b838201915060208201858111156200014057600080fd5b82518660018202830111640100000000821117156200015e57600080fd5b8083526020830192505050908051906020019080838360005b838110156200019457808201518184015260208101905062000177565b50505050905090810190601f168015620001c25780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291905050508282620001f06301ffc9a760e01b6200035560201b60201c565b8160069080519060200190620002089291906200045e565b508060079080519060200190620002219291906200045e565b506200023a6380ac58cd60e01b6200035560201b60201c565b62000252635b5e139f60e01b6200035560201b60201c565b6200026a63780e9d6360e01b6200035560201b60201c565b50506000600a60006101000a81548160ff02191690831515021790555084601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000514565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620003f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004965760008555620004e2565b82601f10620004b157805160ff1916838001178555620004e2565b82800160010185558215620004e2579182015b82811115620004e1578251825591602001919060010190620004c4565b5b509050620004f19190620004f5565b5090565b5b8082111562000510576000816000905550600101620004f6565b5090565b614e6b80620005246000396000f3fe6080604052600436106101e35760003560e01c80636e3e2fa611610102578063a22cb46511610095578063d0def52111610064578063d0def521146111b3578063deb6ce31146112af578063e4691931146112f0578063e985e9c514611331576101e3565b8063a22cb46514610f4f578063b88d4fde14610fac578063be22f546146110be578063c87b56dd146110ff576101e3565b80638da5cb5b116100d15780638da5cb5b14610aec57806395d89b4114610b2d578063967426ff14610bbd5780639aa94ba514610d5b576101e3565b80636e3e2fa6146109b657806370a08231146109f75780637285e3b914610a5c578063761901bb14610a87576101e3565b80632aa222c81161017a5780634f6ccce7116101495780634f6ccce7146108455780635c975abb146108945780636352211e146108c15780636c0360eb14610926576101e3565b80632aa222c8146106b25780632f745c591461071757806342842e0e1461078657806342966c6814610801576101e3565b8063095ea7b3116101b6578063095ea7b31461037857806318030e7d146103d357806318160ddd1461060c57806323b872dd14610637576101e3565b806301609fd3146101e857806301ffc9a71461021357806306fdde0314610283578063081812fc14610313575b600080fd5b3480156101f457600080fd5b506101fd6113b8565b6040518082815260200191505060405180910390f35b34801561021f57600080fd5b5061026b6004803603602081101561023657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506113be565b60405180821515815260200191505060405180910390f35b34801561028f57600080fd5b50610298611425565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102d85780820151818401526020810190506102bd565b50505050905090810190601f1680156103055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031f57600080fd5b5061034c6004803603602081101561033657600080fd5b81019080803590602001909291905050506114c7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038457600080fd5b506103d16004803603604081101561039b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611562565b005b3480156103df57600080fd5b5061040c600480360360208110156103f657600080fd5b81019080803590602001909291905050506116a6565b604051808873ffffffffffffffffffffffffffffffffffffffff168152602001806020018773ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018681526020018060200185810385528b818151815260200191508051906020019080838360005b8381101561049657808201518184015260208101905061047b565b50505050905090810190601f1680156104c35780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b838110156104fc5780820151818401526020810190506104e1565b50505050905090810190601f1680156105295780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b83811015610562578082015181840152602081019050610547565b50505050905090810190601f16801561058f5780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019080838360005b838110156105c85780820151818401526020810190506105ad565b50505050905090810190601f1680156105f55780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b34801561061857600080fd5b50610621611988565b6040518082815260200191505060405180910390f35b34801561064357600080fd5b506106b06004803603606081101561065a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611999565b005b3480156106be57600080fd5b50610701600480360360208110156106d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a0f565b6040518082815260200191505060405180910390f35b34801561072357600080fd5b506107706004803603604081101561073a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a27565b6040518082815260200191505060405180910390f35b34801561079257600080fd5b506107ff600480360360608110156107a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a82565b005b61082d6004803603602081101561081757600080fd5b8101908080359060200190929190505050611aa2565b60405180821515815260200191505060405180910390f35b34801561085157600080fd5b5061087e6004803603602081101561086857600080fd5b81019080803590602001909291905050506123f5565b6040518082815260200191505060405180910390f35b3480156108a057600080fd5b506108a9612418565b60405180821515815260200191505060405180910390f35b3480156108cd57600080fd5b506108fa600480360360208110156108e457600080fd5b810190808035906020019092919050505061242f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561093257600080fd5b5061093b612466565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561097b578082015181840152602081019050610960565b50505050905090810190601f1680156109a85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109c257600080fd5b506109cb612508565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a0357600080fd5b50610a4660048036036020811015610a1a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061252e565b6040518082815260200191505060405180910390f35b348015610a6857600080fd5b50610a71612603565b6040518082815260200191505060405180910390f35b348015610a9357600080fd5b50610ad660048036036020811015610aaa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612609565b6040518082815260200191505060405180910390f35b348015610af857600080fd5b50610b01612621565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b3957600080fd5b50610b42612647565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b82578082015181840152602081019050610b67565b50505050905090810190601f168015610baf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610bc957600080fd5b50610bf660048036036020811015610be057600080fd5b81019080803590602001909291905050506126e9565b604051808b73ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018a73ffffffffffffffffffffffffffffffffffffffff16815260200189151581526020018881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001841515815260200183810383528c818151815260200191508051906020019080838360005b83811015610cb0578082015181840152602081019050610c95565b50505050905090810190601f168015610cdd5780820380516001836020036101000a031916815260200191505b5083810382528b818151815260200191508051906020019080838360005b83811015610d16578082015181840152602081019050610cfb565b50505050905090810190601f168015610d435780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b348015610d6757600080fd5b50610f396004803603610100811015610d7f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610dbc57600080fd5b820183602082011115610dce57600080fd5b80359060200191846001830284011164010000000083111715610df057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e5357600080fd5b820183602082011115610e6557600080fd5b80359060200191846001830284011164010000000083111715610e8757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128e7565b6040518082815260200191505060405180910390f35b348015610f5b57600080fd5b50610faa60048036036040811015610f7257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612cb3565b005b348015610fb857600080fd5b506110bc60048036036080811015610fcf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561103657600080fd5b82018360208201111561104857600080fd5b8035906020019184600183028401116401000000008311171561106a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612e69565b005b3480156110ca57600080fd5b506110d3612ee1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561110b57600080fd5b506111386004803603602081101561112257600080fd5b8101908080359060200190929190505050612f07565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561117857808201518184015260208101905061115d565b50505050905090810190601f1680156111a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156111bf57600080fd5b50611299600480360360408110156111d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561121357600080fd5b82018360208201111561122557600080fd5b8035906020019184600183028401116401000000008311171561124757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506131f0565b6040518082815260200191505060405180910390f35b3480156112bb57600080fd5b506112c4613357565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156112fc57600080fd5b5061130561337d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561133d57600080fd5b506113a06004803603604081101561135457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133a3565b60405180821515815260200191505060405180910390f35b60125481565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114bd5780601f10611492576101008083540402835291602001916114bd565b820191906000526020600020905b8154815290600101906020018083116114a057829003601f168201915b5050505050905090565b60006114d282613437565b611527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614d34602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061156d8261242f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614de46021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16611613613454565b73ffffffffffffffffffffffffffffffffffffffff16148061164257506116418161163c613454565b6133a3565b5b611697576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180614c876038913960400191505060405180910390fd5b6116a1838361345c565b505050565b600e6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117785780601f1061174d57610100808354040283529160200191611778565b820191906000526020600020905b81548152906001019060200180831161175b57829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561183c5780601f106118115761010080835404028352916020019161183c565b820191906000526020600020905b81548152906001019060200180831161181f57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118da5780601f106118af576101008083540402835291602001916118da565b820191906000526020600020905b8154815290600101906020018083116118bd57829003601f168201915b505050505090806005015490806006018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561197e5780601f106119535761010080835404028352916020019161197e565b820191906000526020600020905b81548152906001019060200180831161196157829003601f168201915b5050505050905087565b60006119946002613515565b905090565b6119aa6119a4613454565b8261352a565b6119ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180614e056031913960400191505060405180910390fd5b611a0a83838361361e565b505050565b600d6020528060005260406000206000915090505481565b6000611a7a82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061386190919063ffffffff16565b905092915050565b611a9d83838360405180602001604052806000815250612e69565b505050565b600080601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611b2e57600080fd5b505afa158015611b42573d6000803e3d6000fd5b505050506040513d6020811015611b5857600080fd5b81019080805190602001909291905050501015611bdd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f496e76616c696420746f6b656e2062616c616e6365000000000000000000000081525060200191505060405180910390fd5b6000601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611c8657600080fd5b505afa158015611c9a573d6000803e3d6000fd5b505050506040513d6020811015611cb057600080fd5b81019080805190602001909291905050501015611d35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c696420746f6b656e20616c6c6f77616e636500000000000000000081525060200191505060405180910390fd5b6000600b60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c6000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e895780601f10611e5e57610100808354040283529160200191611e89565b820191906000526020600020905b815481529060010190602001808311611e6c57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f2b5780601f10611f0057610100808354040283529160200191611f2b565b820191906000526020600020905b815481529060010190602001808311611f0e57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160149054906101000a900460ff161515151581525050905061203f8461387b565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383606001518460a001516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156120f857600080fd5b505af115801561210c573d6000803e3d6000fd5b505050506040513d602081101561212257600080fd5b81019080805190602001909291905050506121a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5472616e73666572206661696c656420666f72206261736520746f6b656e000081525060200191505060405180910390fd5b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338361010001518460e001516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561225f57600080fd5b505af1158015612273573d6000803e3d6000fd5b505050506040513d602081101561228957600080fd5b810190808051906020019092919050505061230c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5472616e73666572206661696c656420666f72206261736520746f6b656e000081525060200191505060405180910390fd5b6000600d60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060028081111561235c57fe5b600e6000838152602001908152602001600020600501819055507f922440b9b32ceea32c28a1e3eaab6666b0c219fb8184013c17bc787fc6be8ecb303387604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a160019350505050919050565b60008061240c8360026139b590919063ffffffff16565b50905080915050919050565b6000600a60009054906101000a900460ff16905090565b600061245f82604051806060016040528060298152602001614ce96029913960026139e19092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124fe5780601f106124d3576101008083540402835291602001916124fe565b820191906000526020600020905b8154815290600101906020018083116124e157829003601f168201915b5050505050905090565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156125b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614cbf602a913960400191505060405180910390fd5b6125fc600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a00565b9050919050565b60115481565b600b6020528060005260406000206000915090505481565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126df5780601f106126b4576101008083540402835291602001916126df565b820191906000526020600020905b8154815290600101906020018083116126c257829003601f168201915b5050505050905090565b600c6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127bb5780601f10612790576101008083540402835291602001916127bb565b820191906000526020600020905b81548152906001019060200180831161279e57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128595780601f1061282e57610100808354040283529160200191612859565b820191906000526020600020905b81548152906001019060200180831161283c57829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160149054906101000a900460ff1690508a565b6000600b60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055506000600b60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518061014001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187151581526020018681526020014281526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250600c600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190612a7f929190614a9e565b506040820151816002019080519060200190612a9c929190614a9e565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e082015181600601556101008201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160070160146101000a81548160ff021916908315150217905550905050876040518082805190602001908083835b60208310612bc25780518252602082019150602081019050602083039250612b9f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020818b73ffffffffffffffffffffffffffffffffffffffff167f27cbb566eb604924251497b674c4c5afaa8275d5ef452d9dd86cdd6e0ada15ca8c6040518080602001828103825283818151815260200191508051906020019080838360005b83811015612c69578082015181840152602081019050612c4e565b50505050905090810190601f168015612c965780820380516001836020036101000a031916815260200191505b509250505060405180910390a48091505098975050505050505050565b612cbb613454565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612d5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060056000612d69613454565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16612e16613454565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b612e7a612e74613454565b8361352a565b612ecf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180614e056031913960400191505060405180910390fd5b612edb84848484613a15565b50505050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060612f1282613437565b612f67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614db5602f913960400191505060405180910390fd5b6000600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130105780601f10612fe557610100808354040283529160200191613010565b820191906000526020600020905b815481529060010190602001808311612ff357829003601f168201915b5050505050905060006009805460018160011615610100020316600290049050141561303f57809150506131eb565b6000815111156131185760098160405160200180838054600181600116156101000203166002900480156130aa5780601f106130885761010080835404028352918201916130aa565b820191906000526020600020905b815481529060010190602001808311613096575b505082805190602001908083835b602083106130db57805182526020820191506020810190506020830392506130b8565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506131eb565b600961312384613a87565b60405160200180838054600181600116156101000203166002900480156131815780601f1061315f576101008083540402835291820191613181565b820191906000526020600020905b81548152906001019060200180831161316d575b505082805190602001908083835b602083106131b2578051825260208201915060208101905060208303925061318f565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b60003373ffffffffffffffffffffffffffffffffffffffff16601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146132b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f494e56414c4944204d494e54455200000000000000000000000000000000000081525060200191505060405180910390fd5b6132bf600f613bce565b60006132cb600f613be4565b90506132d78482613bf2565b6132e18184613c10565b6000600d60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506001600281111561333257fe5b600e600083815260200190815260200160002060050181905550819250505092915050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061344d826002613c9a90919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166134cf8361242f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061352382600001613cb4565b9050919050565b600061353582613437565b61358a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614c5b602c913960400191505060405180910390fd5b60006135958361242f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061360457508373ffffffffffffffffffffffffffffffffffffffff166135ec846114c7565b73ffffffffffffffffffffffffffffffffffffffff16145b80613615575061361481856133a3565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661363e8261242f565b73ffffffffffffffffffffffffffffffffffffffff16146136aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180614d8c6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613730576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180614c116024913960400191505060405180910390fd5b61373b838383613cc5565b61374660008261345c565b61379781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cd590919063ffffffff16565b506137e981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cef90919063ffffffff16565b5061380081836002613d099092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006138708360000183613d3e565b60001c905092915050565b60006138868261242f565b905061389481600084613cc5565b61389f60008361345c565b600060086000848152602001908152602001600020805460018160011615610100020316600290049050146138ee576008600083815260200190815260200160002060006138ed9190614b2c565b5b61393f82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cd590919063ffffffff16565b50613954826002613dc190919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000806000806139c88660000186613ddb565b915091508160001c8160001c9350935050509250929050565b60006139f4846000018460001b84613e74565b60001c90509392505050565b6000613a0e82600001613f6a565b9050919050565b613a2084848461361e565b613a2c84848484613f7b565b613a81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180614bdf6032913960400191505060405180910390fd5b50505050565b60606000821415613acf576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050613bc9565b600082905060005b60008214613af9578080600101915050600a8281613af157fe5b049150613ad7565b60008167ffffffffffffffff81118015613b1257600080fd5b506040519080825280601f01601f191660200182016040528015613b455781602001600182028036833780820191505090505b50905060006001830390508593505b60008414613bc157600a8481613b6657fe5b0660300160f81b82828060019003935081518110613b8057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481613bb957fe5b049350613b54565b819450505050505b919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b613c0c828260405180602001604052806000815250614194565b5050565b613c1982613437565b613c6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614d60602c913960400191505060405180910390fd5b80600860008481526020019081526020016000209080519060200190613c95929190614a9e565b505050565b6000613cac836000018360001b614205565b905092915050565b600081600001805490509050919050565b613cd0838383614228565b505050565b6000613ce7836000018360001b614296565b905092915050565b6000613d01836000018360001b61437e565b905092915050565b6000613d35846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6143ee565b90509392505050565b600081836000018054905011613d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180614b926022913960400191505060405180910390fd5b826000018281548110613dae57fe5b9060005260206000200154905092915050565b6000613dd3836000018360001b6144ca565b905092915050565b60008082846000018054905011613e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180614d126022913960400191505060405180910390fd5b6000846000018481548110613e4e57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390613f3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613f00578082015181840152602081019050613ee5565b50505050905090810190601f168015613f2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110613f4e57fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000613f9c8473ffffffffffffffffffffffffffffffffffffffff166145e3565b613fa9576001905061418c565b600061411363150b7a0260e01b613fbe613454565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015614042578082015181840152602081019050614027565b50505050905090810190601f16801561406f5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001614bdf603291398773ffffffffffffffffffffffffffffffffffffffff166145f69092919063ffffffff16565b9050600081806020019051602081101561412c57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b61419e838361460e565b6141ab6000848484613f7b565b614200576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180614bdf6032913960400191505060405180910390fd5b505050565b600080836001016000848152602001908152602001600020541415905092915050565b614233838383614802565b61423b612418565b15614291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180614bb4602b913960400191505060405180910390fd5b505050565b6000808360010160008481526020019081526020016000205490506000811461437257600060018203905060006001866000018054905003905060008660000182815481106142e157fe5b90600052602060002001549050808760000184815481106142fe57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061433657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050614378565b60009150505b92915050565b600061438a8383614807565b6143e35782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506143e8565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415614495578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506144c3565b828560000160018303815481106144a857fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080836001016000848152602001908152602001600020549050600081146145d7576000600182039050600060018660000180549050039050600086600001828154811061451557fe5b906000526020600020906002020190508087600001848154811061453557fe5b906000526020600020906002020160008201548160000155600182015481600101559050506001830187600101600083600001548152602001908152602001600020819055508660000180548061458857fe5b60019003818190600052602060002090600202016000808201600090556001820160009055505090558660010160008781526020019081526020016000206000905560019450505050506145dd565b60009150505b92915050565b600080823b905060008111915050919050565b6060614605848460008561482a565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156146b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b6146ba81613437565b1561472d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61473960008383613cc5565b61478a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cef90919063ffffffff16565b506147a181836002613d099092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b505050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015614885576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180614c356026913960400191505060405180910390fd5b61488e856145e3565b614900576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061494f578051825260208201915060208101905060208303925061492c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146149b1576040519150601f19603f3d011682016040523d82523d6000602084013e6149b6565b606091505b50915091506149c68282866149d2565b92505050949350505050565b606083156149e257829050614a97565b6000835111156149f55782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614a5c578082015181840152602081019050614a41565b50505050905090810190601f168015614a895780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282614ad45760008555614b1b565b82601f10614aed57805160ff1916838001178555614b1b565b82800160010185558215614b1b579182015b82811115614b1a578251825591602001919060010190614aff565b5b509050614b289190614b74565b5090565b50805460018160011615610100020316600290046000825580601f10614b525750614b71565b601f016020900490600052602060002090810190614b709190614b74565b5b50565b5b80821115614b8d576000816000905550600101614b75565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c65207061757365644552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220000c9dae7a1b378f097becde328dff5e53d32ba2124038a5e842d39f184117a064736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c80636e3e2fa611610102578063a22cb46511610095578063d0def52111610064578063d0def521146111b3578063deb6ce31146112af578063e4691931146112f0578063e985e9c514611331576101e3565b8063a22cb46514610f4f578063b88d4fde14610fac578063be22f546146110be578063c87b56dd146110ff576101e3565b80638da5cb5b116100d15780638da5cb5b14610aec57806395d89b4114610b2d578063967426ff14610bbd5780639aa94ba514610d5b576101e3565b80636e3e2fa6146109b657806370a08231146109f75780637285e3b914610a5c578063761901bb14610a87576101e3565b80632aa222c81161017a5780634f6ccce7116101495780634f6ccce7146108455780635c975abb146108945780636352211e146108c15780636c0360eb14610926576101e3565b80632aa222c8146106b25780632f745c591461071757806342842e0e1461078657806342966c6814610801576101e3565b8063095ea7b3116101b6578063095ea7b31461037857806318030e7d146103d357806318160ddd1461060c57806323b872dd14610637576101e3565b806301609fd3146101e857806301ffc9a71461021357806306fdde0314610283578063081812fc14610313575b600080fd5b3480156101f457600080fd5b506101fd6113b8565b6040518082815260200191505060405180910390f35b34801561021f57600080fd5b5061026b6004803603602081101561023657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506113be565b60405180821515815260200191505060405180910390f35b34801561028f57600080fd5b50610298611425565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102d85780820151818401526020810190506102bd565b50505050905090810190601f1680156103055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031f57600080fd5b5061034c6004803603602081101561033657600080fd5b81019080803590602001909291905050506114c7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038457600080fd5b506103d16004803603604081101561039b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611562565b005b3480156103df57600080fd5b5061040c600480360360208110156103f657600080fd5b81019080803590602001909291905050506116a6565b604051808873ffffffffffffffffffffffffffffffffffffffff168152602001806020018773ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018681526020018060200185810385528b818151815260200191508051906020019080838360005b8381101561049657808201518184015260208101905061047b565b50505050905090810190601f1680156104c35780820380516001836020036101000a031916815260200191505b50858103845289818151815260200191508051906020019080838360005b838110156104fc5780820151818401526020810190506104e1565b50505050905090810190601f1680156105295780820380516001836020036101000a031916815260200191505b50858103835288818151815260200191508051906020019080838360005b83811015610562578082015181840152602081019050610547565b50505050905090810190601f16801561058f5780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019080838360005b838110156105c85780820151818401526020810190506105ad565b50505050905090810190601f1680156105f55780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b34801561061857600080fd5b50610621611988565b6040518082815260200191505060405180910390f35b34801561064357600080fd5b506106b06004803603606081101561065a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611999565b005b3480156106be57600080fd5b50610701600480360360208110156106d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a0f565b6040518082815260200191505060405180910390f35b34801561072357600080fd5b506107706004803603604081101561073a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a27565b6040518082815260200191505060405180910390f35b34801561079257600080fd5b506107ff600480360360608110156107a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a82565b005b61082d6004803603602081101561081757600080fd5b8101908080359060200190929190505050611aa2565b60405180821515815260200191505060405180910390f35b34801561085157600080fd5b5061087e6004803603602081101561086857600080fd5b81019080803590602001909291905050506123f5565b6040518082815260200191505060405180910390f35b3480156108a057600080fd5b506108a9612418565b60405180821515815260200191505060405180910390f35b3480156108cd57600080fd5b506108fa600480360360208110156108e457600080fd5b810190808035906020019092919050505061242f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561093257600080fd5b5061093b612466565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561097b578082015181840152602081019050610960565b50505050905090810190601f1680156109a85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109c257600080fd5b506109cb612508565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a0357600080fd5b50610a4660048036036020811015610a1a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061252e565b6040518082815260200191505060405180910390f35b348015610a6857600080fd5b50610a71612603565b6040518082815260200191505060405180910390f35b348015610a9357600080fd5b50610ad660048036036020811015610aaa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612609565b6040518082815260200191505060405180910390f35b348015610af857600080fd5b50610b01612621565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b3957600080fd5b50610b42612647565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b82578082015181840152602081019050610b67565b50505050905090810190601f168015610baf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610bc957600080fd5b50610bf660048036036020811015610be057600080fd5b81019080803590602001909291905050506126e9565b604051808b73ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018a73ffffffffffffffffffffffffffffffffffffffff16815260200189151581526020018881526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001841515815260200183810383528c818151815260200191508051906020019080838360005b83811015610cb0578082015181840152602081019050610c95565b50505050905090810190601f168015610cdd5780820380516001836020036101000a031916815260200191505b5083810382528b818151815260200191508051906020019080838360005b83811015610d16578082015181840152602081019050610cfb565b50505050905090810190601f168015610d435780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b348015610d6757600080fd5b50610f396004803603610100811015610d7f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610dbc57600080fd5b820183602082011115610dce57600080fd5b80359060200191846001830284011164010000000083111715610df057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e5357600080fd5b820183602082011115610e6557600080fd5b80359060200191846001830284011164010000000083111715610e8757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128e7565b6040518082815260200191505060405180910390f35b348015610f5b57600080fd5b50610faa60048036036040811015610f7257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612cb3565b005b348015610fb857600080fd5b506110bc60048036036080811015610fcf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561103657600080fd5b82018360208201111561104857600080fd5b8035906020019184600183028401116401000000008311171561106a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612e69565b005b3480156110ca57600080fd5b506110d3612ee1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561110b57600080fd5b506111386004803603602081101561112257600080fd5b8101908080359060200190929190505050612f07565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561117857808201518184015260208101905061115d565b50505050905090810190601f1680156111a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156111bf57600080fd5b50611299600480360360408110156111d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561121357600080fd5b82018360208201111561122557600080fd5b8035906020019184600183028401116401000000008311171561124757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506131f0565b6040518082815260200191505060405180910390f35b3480156112bb57600080fd5b506112c4613357565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156112fc57600080fd5b5061130561337d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561133d57600080fd5b506113a06004803603604081101561135457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133a3565b60405180821515815260200191505060405180910390f35b60125481565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114bd5780601f10611492576101008083540402835291602001916114bd565b820191906000526020600020905b8154815290600101906020018083116114a057829003601f168201915b5050505050905090565b60006114d282613437565b611527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614d34602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061156d8261242f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614de46021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16611613613454565b73ffffffffffffffffffffffffffffffffffffffff16148061164257506116418161163c613454565b6133a3565b5b611697576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180614c876038913960400191505060405180910390fd5b6116a1838361345c565b505050565b600e6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117785780601f1061174d57610100808354040283529160200191611778565b820191906000526020600020905b81548152906001019060200180831161175b57829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561183c5780601f106118115761010080835404028352916020019161183c565b820191906000526020600020905b81548152906001019060200180831161181f57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118da5780601f106118af576101008083540402835291602001916118da565b820191906000526020600020905b8154815290600101906020018083116118bd57829003601f168201915b505050505090806005015490806006018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561197e5780601f106119535761010080835404028352916020019161197e565b820191906000526020600020905b81548152906001019060200180831161196157829003601f168201915b5050505050905087565b60006119946002613515565b905090565b6119aa6119a4613454565b8261352a565b6119ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180614e056031913960400191505060405180910390fd5b611a0a83838361361e565b505050565b600d6020528060005260406000206000915090505481565b6000611a7a82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061386190919063ffffffff16565b905092915050565b611a9d83838360405180602001604052806000815250612e69565b505050565b600080601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611b2e57600080fd5b505afa158015611b42573d6000803e3d6000fd5b505050506040513d6020811015611b5857600080fd5b81019080805190602001909291905050501015611bdd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f496e76616c696420746f6b656e2062616c616e6365000000000000000000000081525060200191505060405180910390fd5b6000601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611c8657600080fd5b505afa158015611c9a573d6000803e3d6000fd5b505050506040513d6020811015611cb057600080fd5b81019080805190602001909291905050501015611d35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f496e76616c696420746f6b656e20616c6c6f77616e636500000000000000000081525060200191505060405180910390fd5b6000600b60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600c6000838152602001908152602001600020604051806101400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e895780601f10611e5e57610100808354040283529160200191611e89565b820191906000526020600020905b815481529060010190602001808311611e6c57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f2b5780601f10611f0057610100808354040283529160200191611f2b565b820191906000526020600020905b815481529060010190602001808311611f0e57829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff161515151581526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160149054906101000a900460ff161515151581525050905061203f8461387b565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383606001518460a001516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156120f857600080fd5b505af115801561210c573d6000803e3d6000fd5b505050506040513d602081101561212257600080fd5b81019080805190602001909291905050506121a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5472616e73666572206661696c656420666f72206261736520746f6b656e000081525060200191505060405180910390fd5b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338361010001518460e001516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561225f57600080fd5b505af1158015612273573d6000803e3d6000fd5b505050506040513d602081101561228957600080fd5b810190808051906020019092919050505061230c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f5472616e73666572206661696c656420666f72206261736520746f6b656e000081525060200191505060405180910390fd5b6000600d60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060028081111561235c57fe5b600e6000838152602001908152602001600020600501819055507f922440b9b32ceea32c28a1e3eaab6666b0c219fb8184013c17bc787fc6be8ecb303387604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a160019350505050919050565b60008061240c8360026139b590919063ffffffff16565b50905080915050919050565b6000600a60009054906101000a900460ff16905090565b600061245f82604051806060016040528060298152602001614ce96029913960026139e19092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124fe5780601f106124d3576101008083540402835291602001916124fe565b820191906000526020600020905b8154815290600101906020018083116124e157829003601f168201915b5050505050905090565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156125b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614cbf602a913960400191505060405180910390fd5b6125fc600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613a00565b9050919050565b60115481565b600b6020528060005260406000206000915090505481565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126df5780601f106126b4576101008083540402835291602001916126df565b820191906000526020600020905b8154815290600101906020018083116126c257829003601f168201915b5050505050905090565b600c6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127bb5780601f10612790576101008083540402835291602001916127bb565b820191906000526020600020905b81548152906001019060200180831161279e57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128595780601f1061282e57610100808354040283529160200191612859565b820191906000526020600020905b81548152906001019060200180831161283c57829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160149054906101000a900460ff1690508a565b6000600b60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055506000600b60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518061014001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018981526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187151581526020018681526020014281526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250600c600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190612a7f929190614a9e565b506040820151816002019080519060200190612a9c929190614a9e565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555060a0820151816004015560c0820151816005015560e082015181600601556101008201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160070160146101000a81548160ff021916908315150217905550905050876040518082805190602001908083835b60208310612bc25780518252602082019150602081019050602083039250612b9f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020818b73ffffffffffffffffffffffffffffffffffffffff167f27cbb566eb604924251497b674c4c5afaa8275d5ef452d9dd86cdd6e0ada15ca8c6040518080602001828103825283818151815260200191508051906020019080838360005b83811015612c69578082015181840152602081019050612c4e565b50505050905090810190601f168015612c965780820380516001836020036101000a031916815260200191505b509250505060405180910390a48091505098975050505050505050565b612cbb613454565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612d5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060056000612d69613454565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16612e16613454565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b612e7a612e74613454565b8361352a565b612ecf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180614e056031913960400191505060405180910390fd5b612edb84848484613a15565b50505050565b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060612f1282613437565b612f67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614db5602f913960400191505060405180910390fd5b6000600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130105780601f10612fe557610100808354040283529160200191613010565b820191906000526020600020905b815481529060010190602001808311612ff357829003601f168201915b5050505050905060006009805460018160011615610100020316600290049050141561303f57809150506131eb565b6000815111156131185760098160405160200180838054600181600116156101000203166002900480156130aa5780601f106130885761010080835404028352918201916130aa565b820191906000526020600020905b815481529060010190602001808311613096575b505082805190602001908083835b602083106130db57805182526020820191506020810190506020830392506130b8565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506131eb565b600961312384613a87565b60405160200180838054600181600116156101000203166002900480156131815780601f1061315f576101008083540402835291820191613181565b820191906000526020600020905b81548152906001019060200180831161316d575b505082805190602001908083835b602083106131b2578051825260208201915060208101905060208303925061318f565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b60003373ffffffffffffffffffffffffffffffffffffffff16601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146132b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f494e56414c4944204d494e54455200000000000000000000000000000000000081525060200191505060405180910390fd5b6132bf600f613bce565b60006132cb600f613be4565b90506132d78482613bf2565b6132e18184613c10565b6000600d60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506001600281111561333257fe5b600e600083815260200190815260200160002060050181905550819250505092915050565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061344d826002613c9a90919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166134cf8361242f565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061352382600001613cb4565b9050919050565b600061353582613437565b61358a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614c5b602c913960400191505060405180910390fd5b60006135958361242f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061360457508373ffffffffffffffffffffffffffffffffffffffff166135ec846114c7565b73ffffffffffffffffffffffffffffffffffffffff16145b80613615575061361481856133a3565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661363e8261242f565b73ffffffffffffffffffffffffffffffffffffffff16146136aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180614d8c6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613730576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180614c116024913960400191505060405180910390fd5b61373b838383613cc5565b61374660008261345c565b61379781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cd590919063ffffffff16565b506137e981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cef90919063ffffffff16565b5061380081836002613d099092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006138708360000183613d3e565b60001c905092915050565b60006138868261242f565b905061389481600084613cc5565b61389f60008361345c565b600060086000848152602001908152602001600020805460018160011615610100020316600290049050146138ee576008600083815260200190815260200160002060006138ed9190614b2c565b5b61393f82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cd590919063ffffffff16565b50613954826002613dc190919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000806000806139c88660000186613ddb565b915091508160001c8160001c9350935050509250929050565b60006139f4846000018460001b84613e74565b60001c90509392505050565b6000613a0e82600001613f6a565b9050919050565b613a2084848461361e565b613a2c84848484613f7b565b613a81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180614bdf6032913960400191505060405180910390fd5b50505050565b60606000821415613acf576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050613bc9565b600082905060005b60008214613af9578080600101915050600a8281613af157fe5b049150613ad7565b60008167ffffffffffffffff81118015613b1257600080fd5b506040519080825280601f01601f191660200182016040528015613b455781602001600182028036833780820191505090505b50905060006001830390508593505b60008414613bc157600a8481613b6657fe5b0660300160f81b82828060019003935081518110613b8057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481613bb957fe5b049350613b54565b819450505050505b919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b613c0c828260405180602001604052806000815250614194565b5050565b613c1982613437565b613c6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614d60602c913960400191505060405180910390fd5b80600860008481526020019081526020016000209080519060200190613c95929190614a9e565b505050565b6000613cac836000018360001b614205565b905092915050565b600081600001805490509050919050565b613cd0838383614228565b505050565b6000613ce7836000018360001b614296565b905092915050565b6000613d01836000018360001b61437e565b905092915050565b6000613d35846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b6143ee565b90509392505050565b600081836000018054905011613d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180614b926022913960400191505060405180910390fd5b826000018281548110613dae57fe5b9060005260206000200154905092915050565b6000613dd3836000018360001b6144ca565b905092915050565b60008082846000018054905011613e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180614d126022913960400191505060405180910390fd5b6000846000018481548110613e4e57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390613f3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613f00578082015181840152602081019050613ee5565b50505050905090810190601f168015613f2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110613f4e57fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000613f9c8473ffffffffffffffffffffffffffffffffffffffff166145e3565b613fa9576001905061418c565b600061411363150b7a0260e01b613fbe613454565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015614042578082015181840152602081019050614027565b50505050905090810190601f16801561406f5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001614bdf603291398773ffffffffffffffffffffffffffffffffffffffff166145f69092919063ffffffff16565b9050600081806020019051602081101561412c57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b61419e838361460e565b6141ab6000848484613f7b565b614200576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180614bdf6032913960400191505060405180910390fd5b505050565b600080836001016000848152602001908152602001600020541415905092915050565b614233838383614802565b61423b612418565b15614291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180614bb4602b913960400191505060405180910390fd5b505050565b6000808360010160008481526020019081526020016000205490506000811461437257600060018203905060006001866000018054905003905060008660000182815481106142e157fe5b90600052602060002001549050808760000184815481106142fe57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061433657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050614378565b60009150505b92915050565b600061438a8383614807565b6143e35782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506143e8565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415614495578460000160405180604001604052808681526020018581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505084600001805490508560010160008681526020019081526020016000208190555060019150506144c3565b828560000160018303815481106144a857fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080836001016000848152602001908152602001600020549050600081146145d7576000600182039050600060018660000180549050039050600086600001828154811061451557fe5b906000526020600020906002020190508087600001848154811061453557fe5b906000526020600020906002020160008201548160000155600182015481600101559050506001830187600101600083600001548152602001908152602001600020819055508660000180548061458857fe5b60019003818190600052602060002090600202016000808201600090556001820160009055505090558660010160008781526020019081526020016000206000905560019450505050506145dd565b60009150505b92915050565b600080823b905060008111915050919050565b6060614605848460008561482a565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156146b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b6146ba81613437565b1561472d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61473960008383613cc5565b61478a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613cef90919063ffffffff16565b506147a181836002613d099092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b505050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015614885576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180614c356026913960400191505060405180910390fd5b61488e856145e3565b614900576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061494f578051825260208201915060208101905060208303925061492c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146149b1576040519150601f19603f3d011682016040523d82523d6000602084013e6149b6565b606091505b50915091506149c68282866149d2565b92505050949350505050565b606083156149e257829050614a97565b6000835111156149f55782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614a5c578082015181840152602081019050614a41565b50505050905090810190601f168015614a895780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282614ad45760008555614b1b565b82601f10614aed57805160ff1916838001178555614b1b565b82800160010185558215614b1b579182015b82811115614b1a578251825591602001919060010190614aff565b5b509050614b289190614b74565b5090565b50805460018160011615610100020316600290046000825580601f10614b525750614b71565b601f016020900490600052602060002090810190614b709190614b74565b5b50565b5b80821115614b8d576000816000905550600101614b75565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c65207061757365644552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220000c9dae7a1b378f097becde328dff5e53d32ba2124038a5e842d39f184117a064736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "400:4108:3:-:0;;;1299:601;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:4;1609:6;768:40:6;435:10;787:20;;768:18;;;:40;;:::i;:::-;3657:5:10;3649;:13;;;;;;;;;;;;:::i;:::-;;3682:7;3672;:17;;;;;;;;;;;;:::i;:::-;;3777:40;2740:10;3796:20;;3777:18;;;:40;;:::i;:::-;3827:49;3072:10;3846:29;;3827:18;;;:49;;:::i;:::-;3886:51;3445:10;3905:31;;3886:18;;;:51;;:::i;:::-;3575:369;;950:5:21;940:7;;:15;;;;;;;;;;;;;;;;;;1635:6:3::1;1627:5;;:14;;;;;;;;;;;;;;;;;;1662:9;1651:8;;:20;;;;;;;;;;;;;;;;;;1692:12;1681:8;;:23;;;;;;;;;;;;;;;;;;1299:601:::0;;;;;400:4108;;1499:198:6;1597:10;1582:25;;:11;:25;;;;;1574:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1686:4;1650:20;:33;1671:11;1650:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1499:198;:::o;400:4108:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "400:4108:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;965:140:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4500:90:10;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7107:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6665:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;799:69:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6175:200:10;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7955:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;693:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5952:152:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8321:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2468:1766:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6447:161:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1057:76:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4271:167:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5786:87;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:35:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4003:211:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;605:33:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;527:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;579:20:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4654:94:10;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:62:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7383:290:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8536:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;711:30:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4814:740:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1909:550:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;682:23;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;747:37;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7739:154:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;644:32:3;;;;:::o;965:140:6:-;1042:4;1065:20;:33;1086:11;1065:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:40;;965:140;;;:::o;4500:90:10:-;4546:13;4578:5;4571:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:90;:::o;7107:209::-;7175:7;7202:16;7210:7;7202;:16::i;:::-;7194:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7285:15;:24;7301:7;7285:24;;;;;;;;;;;;;;;;;;;;;7278:31;;7107:209;;;:::o;6665:381::-;6745:13;6761:16;6769:7;6761;:16::i;:::-;6745:32;;6801:5;6795:11;;:2;:11;;;;6787:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6879:5;6863:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;6888:37;6905:5;6912:12;:10;:12::i;:::-;6888:16;:37::i;:::-;6863:62;6855:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:21;7027:2;7031:7;7018:8;:21::i;:::-;6665:381;;;:::oo;6175:200:10:-;6228:7;6347:21;:12;:19;:21::i;:::-;6340:28;;6175:200;:::o;7955:300::-;8114:41;8133:12;:10;:12::i;:::-;8147:7;8114:18;:41::i;:::-;8106:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8220:28;8230:4;8236:2;8240:7;8220:9;:28::i;:::-;7955:300;;;:::o;693:60:2:-;;;;;;;;;;;;;;;;;:::o;5952:152:10:-;6041:7;6067:30;6091:5;6067:13;:20;6081:5;6067:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6060:37;;5952:152;;;;:::o;8321:149::-;8424:39;8441:4;8447:2;8451:7;8424:39;;;;;;;;;;;;:16;:39::i;:::-;8321:149;;;:::o;2468:1766:3:-;2544:4;2656:1;2622:8;;;;;;;;;;;:18;;;2641:10;2622:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;;2601:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:1;2774:8;;;;;;;;;;;:18;;;2793:10;2813:4;2774:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:50;;2753:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3049:10;3062:13;:28;3084:4;3062:28;;;;;;;;;;;;;;;;3049:41;;3100:38;3141:19;:26;3161:5;3141:26;;;;;;;;;;;3100:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3186:14;3192:7;3186:5;:14::i;:::-;3423:8;;;;;;;;;;;:21;;;3462:10;3491:12;:27;;;3537:12;:25;;;3423:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3402:217;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3697:8;;;;;;;;;;;:21;;;3736:10;3765:12;:27;;;3811:12;:23;;;3697:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3676:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3943:11;3957:28;:43;3994:4;3957:43;;;;;;;;;;;;;;;;3943:57;;4055:35;4050:41;;;;;;;;4010:22;:30;4033:6;4010:30;;;;;;;;;;;:37;;:81;;;;4115:90;4145:4;4164:10;4188:7;4115:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4223:4;4216:11;;;;;2468:1766;;;:::o;6447:161:10:-;6514:7;6534:15;6555:22;6571:5;6555:12;:15;;:22;;;;:::i;:::-;6533:44;;;6594:7;6587:14;;;6447:161;;;:::o;1057:76:21:-;1096:4;1119:7;;;;;;;;;;;1112:14;;1057:76;:::o;4271:167:10:-;4335:7;4361:70;4378:7;4361:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4354:77;;4271:167;;;:::o;5786:87::-;5826:13;5858:8;5851:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5786:87;:::o;790:35:3:-;;;;;;;;;;;;;:::o;4003:211:10:-;4067:7;4111:1;4094:19;;:5;:19;;;;4086:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:29;:13;:20;4192:5;4178:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4171:36;;4003:211;;;:::o;605:33:3:-;;;;:::o;527:45:2:-;;;;;;;;;;;;;;;;;:::o;579:20:3:-;;;;;;;;;;;;;:::o;4654:94:10:-;4702:13;4734:7;4727:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4654:94;:::o;578:62:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1767:861::-;2036:4;2052:13;:21;2066:6;2052:21;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;2085:6;2094:13;:21;2108:6;2094:21;;;;;;;;;;;;;;;;2085:30;;2163:383;;;;;;;;2211:6;2163:383;;;;;;2238:4;2163:383;;;;2264:6;2163:383;;;;2300:14;2163:383;;;;;;2340:10;2163:383;;;;;;2378:12;2163:383;;;;2413:15;2163:383;;;;2454:10;2163:383;;;;2494:14;2163:383;;;;;;2531:4;2163:383;;;;;2138:19;:22;2158:1;2138:22;;;;;;;;;;;:408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2596:6;2562:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2587:1;2579:6;2562:41;;;2590:4;2562:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:1;2613:8;;;1767:861;;;;;;;;;;:::o;7383:290:10:-;7497:12;:10;:12::i;:::-;7485:24;;:8;:24;;;;7477:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7595:8;7550:18;:32;7569:12;:10;:12::i;:::-;7550:32;;;;;;;;;;;;;;;:42;7583:8;7550:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7647:8;7618:48;;7633:12;:10;:12::i;:::-;7618:48;;;7657:8;7618:48;;;;;;;;;;;;;;;;;;;;7383:290;;:::o;8536:282::-;8667:41;8686:12;:10;:12::i;:::-;8700:7;8667:18;:41::i;:::-;8659:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8772:39;8786:4;8792:2;8796:7;8805:5;8772:13;:39::i;:::-;8536:282;;;;:::o;711:30:3:-;;;;;;;;;;;;;:::o;4814:740:10:-;4879:13;4912:16;4920:7;4912;:16::i;:::-;4904:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4991:23;5017:10;:19;5028:7;5017:19;;;;;;;;;;;4991:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5135:1;5115:8;5109:22;;;;;;;;;;;;;;;;:27;5105:74;;;5159:9;5152:16;;;;;5105:74;5307:1;5287:9;5281:23;:27;5277:110;;;5355:8;5365:9;5338:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5324:52;;;;;5277:110;5517:8;5527:18;:7;:16;:18::i;:::-;5500:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5486:61;;;4814:740;;;;:::o;1909:550:3:-;1993:7;2036:10;2024:22;;:8;;;;;;;;;;;:22;;;2016:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2075:21;:9;:19;:21::i;:::-;2107:17;2127:19;:9;:17;:19::i;:::-;2107:39;;2156:26;2166:4;2172:9;2156;:26::i;:::-;2192:33;2205:9;2216:8;2192:12;:33::i;:::-;2277:10;2290:28;:43;2327:4;2290:43;;;;;;;;;;;;;;;;2277:56;;2387:35;2382:41;;;;;;;;2343:22;:29;2366:5;2343:29;;;;;;;;;;;:36;;:80;;;;2443:9;2436:16;;;;1909:550;;;;:::o;682:23::-;;;;;;;;;;;;;:::o;747:37::-;;;;;;;;;;;;;:::o;7739:154:10:-;7828:4;7851:18;:25;7870:5;7851:25;;;;;;;;;;;;;;;:35;7877:8;7851:35;;;;;;;;;;;;;;;;;;;;;;;;;7844:42;;7739:154;;;;:::o;10252:117::-;10309:4;10332:30;10354:7;10332:12;:21;;:30;;;;:::i;:::-;10325:37;;10252:117;;;:::o;598:104:5:-;651:15;685:10;678:17;;598:104;:::o;15908:155:10:-;16000:2;15973:15;:24;15989:7;15973:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16048:7;16044:2;16017:39;;16026:16;16034:7;16026;:16::i;:::-;16017:39;;;;;;;;;;;;15908:155;;:::o;7031:121:19:-;7100:7;7126:19;7134:3;:10;;7126:7;:19::i;:::-;7119:26;;7031:121;;;:::o;10527:329:10:-;10612:4;10636:16;10644:7;10636;:16::i;:::-;10628:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10711:13;10727:16;10735:7;10727;:16::i;:::-;10711:32;;10772:5;10761:16;;:7;:16;;;:51;;;;10805:7;10781:31;;:20;10793:7;10781:11;:20::i;:::-;:31;;;10761:51;:87;;;;10816:32;10833:5;10840:7;10816:16;:32::i;:::-;10761:87;10753:96;;;10527:329;;;;:::o;13521:559::-;13638:4;13618:24;;:16;13626:7;13618;:16::i;:::-;:24;;;13610:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13720:1;13706:16;;:2;:16;;;;13698:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13774:39;13795:4;13801:2;13805:7;13774:20;:39::i;:::-;13875:29;13892:1;13896:7;13875:8;:29::i;:::-;13915:35;13942:7;13915:13;:19;13929:4;13915:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;13960:30;13982:7;13960:13;:17;13974:2;13960:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;14001:29;14018:7;14027:2;14001:12;:16;;:29;;;;;:::i;:::-;;14065:7;14061:2;14046:27;;14055:4;14046:27;;;;;;;;;;;;13521:559;;;:::o;9214:135:20:-;9285:7;9319:22;9323:3;:10;;9335:5;9319:3;:22::i;:::-;9311:31;;9304:38;;9214:135;;;;:::o;12695:502:10:-;12754:13;12770:16;12778:7;12770;:16::i;:::-;12754:32;;12797:48;12818:5;12833:1;12837:7;12797:20;:48::i;:::-;12883:29;12900:1;12904:7;12883:8;:29::i;:::-;12999:1;12968:10;:19;12979:7;12968:19;;;;;;;;;;;12962:33;;;;;;;;;;;;;;;;:38;12958:95;;13023:10;:19;13034:7;13023:19;;;;;;;;;;;;13016:26;;;;:::i;:::-;12958:95;13063:36;13091:7;13063:13;:20;13077:5;13063:20;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;;13110:28;13130:7;13110:12;:19;;:28;;;;:::i;:::-;;13182:7;13178:1;13154:36;;13163:5;13154:36;;;;;;;;;;;;12695:502;;:::o;7480:224:19:-;7560:7;7569;7589:11;7602:13;7619:22;7623:3;:10;;7635:5;7619:3;:22::i;:::-;7588:53;;;;7667:3;7659:12;;7689:5;7681:14;;7651:46;;;;;;7480:224;;;;;:::o;8123:202::-;8230:7;8272:44;8277:3;:10;;8297:3;8289:12;;8303;8272:4;:44::i;:::-;8264:53;;8249:69;;8123:202;;;;;:::o;8770:112:20:-;8830:7;8856:19;8864:3;:10;;8856:7;:19::i;:::-;8849:26;;8770:112;;;:::o;9680:269:10:-;9793:28;9803:4;9809:2;9813:7;9793:9;:28::i;:::-;9839:48;9862:4;9868:2;9872:7;9881:5;9839:22;:48::i;:::-;9831:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9680:269;;;;:::o;210:723:22:-;266:13;492:1;483:5;:10;479:51;;;509:10;;;;;;;;;;;;;;;;;;;;;479:51;539:12;554:5;539:20;;569:14;593:75;608:1;600:4;:9;593:75;;625:8;;;;;;;655:2;647:10;;;;;;;;;593:75;;;677:19;709:6;699:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:39;;726:13;751:1;742:6;:10;726:26;;769:5;762:12;;784:112;799:1;791:4;:9;784:112;;857:2;850:4;:9;;;;;;845:2;:14;834:27;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:45;;;;;;;;;;;883:2;875:10;;;;;;;;;784:112;;;919:6;905:21;;;;;;210:723;;;;:::o;1224:178:18:-;1394:1;1376:7;:14;;;:19;;;;;;;;;;;1224:178;:::o;1106:112::-;1171:7;1197;:14;;;1190:21;;1106:112;;;:::o;11187:108:10:-;11262:26;11272:2;11276:7;11262:26;;;;;;;;;;;;:9;:26::i;:::-;11187:108;;:::o;14227:212::-;14326:16;14334:7;14326;:16::i;:::-;14318:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14423:9;14401:10;:19;14412:7;14401:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;14227:212;;:::o;6799:149:19:-;6883:4;6906:35;6916:3;:10;;6936:3;6928:12;;6906:9;:35::i;:::-;6899:42;;6799:149;;;;:::o;4491:108::-;4547:7;4573:3;:12;;:19;;;;4566:26;;4491:108;;;:::o;4249:256:3:-;4369:44;4396:4;4402:2;4406:6;4369:26;:44::i;:::-;4249:256;;;:::o;8329:135:20:-;8399:4;8422:35;8430:3;:10;;8450:5;8442:14;;8422:7;:35::i;:::-;8415:42;;8329:135;;;;:::o;8032:129::-;8099:4;8122:32;8127:3;:10;;8147:5;8139:14;;8122:4;:32::i;:::-;8115:39;;8032:129;;;;:::o;6247:174:19:-;6336:4;6359:55;6364:3;:10;;6384:3;6376:12;;6406:5;6398:14;;6390:23;;6359:4;:55::i;:::-;6352:62;;6247:174;;;;;:::o;4452:201:20:-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;6580:140:19:-;6657:4;6680:33;6688:3;:10;;6708:3;6700:12;;6680:7;:33::i;:::-;6673:40;;6580:140;;;;:::o;4942:274::-;5009:7;5018;5067:5;5045:3;:12;;:19;;;;:27;5037:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;5623:315::-;5717:7;5736:16;5755:3;:12;;:17;5768:3;5755:17;;;;;;;;;;;;5736:36;;5802:1;5790:8;:13;;5805:12;5782:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:3;:12;;5895:1;5884:8;:12;5871:26;;;;;;;;;;;;;;;;;;:33;;;5864:40;;;5623:315;;;;;:::o;4013:107:20:-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;15313:589:10:-;15433:4;15458:15;:2;:13;;;:15::i;:::-;15453:58;;15496:4;15489:11;;;;15453:58;15520:23;15546:246;15598:45;;;15657:12;:10;:12::i;:::-;15683:4;15701:7;15722:5;15562:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15546:246;;;;;;;;;;;;;;;;;:2;:15;;;;:246;;;;;:::i;:::-;15520:272;;15802:13;15829:10;15818:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15802:48;;1076:10;15878:16;;15868:26;;;:6;:26;;;;15860:35;;;;15313:589;;;;;;;:::o;11516:247::-;11611:18;11617:2;11621:7;11611:5;:18::i;:::-;11647:54;11678:1;11682:2;11686:7;11695:5;11647:22;:54::i;:::-;11639:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11516:247;;;:::o;4278:123:19:-;4349:4;4393:1;4372:3;:12;;:17;4385:3;4372:17;;;;;;;;;;;;:22;;4365:29;;4278:123;;;;:::o;595:237:12:-;704:45;731:4;737:2;741:7;704:26;:45::i;:::-;769:8;:6;:8::i;:::-;768:9;760:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:237;;;:::o;2212:1512:20:-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;1836:678:19:-;1912:4;2026:16;2045:3;:12;;:17;2058:3;2045:17;;;;;;;;;;;;2026:36;;2089:1;2077:8;:13;2073:435;;;2143:3;:12;;2161:38;;;;;;;;2178:3;2161:38;;;;2191:5;2161:38;;;2143:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:3;:12;;:19;;;;2335:3;:12;;:17;2348:3;2335:17;;;;;;;;;;;:39;;;;2395:4;2388:11;;;;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;1836:678;;;;;;:::o;2682:1517::-;2746:4;2860:16;2879:3;:12;;:17;2892:3;2879:17;;;;;;;;;;;;2860:36;;2923:1;2911:8;:13;2907:1286;;3267:21;3302:1;3291:8;:12;3267:36;;3317:17;3359:1;3337:3;:12;;:19;;;;:23;3317:43;;3600:26;3629:3;:12;;3642:9;3629:23;;;;;;;;;;;;;;;;;;3600:52;;3774:9;3744:3;:12;;3757:13;3744:27;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;3896:1;3880:13;:17;3849:3;:12;;:28;3862:9;:14;;;3849:28;;;;;;;;;;;:48;;;;4003:3;:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4096:3;:12;;:17;4109:3;4096:17;;;;;;;;;;;4089:24;;;4135:4;4128:11;;;;;;;;2907:1286;4177:5;4170:12;;;2682:1517;;;;;:::o;726:413:17:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;12085:393:10:-;12178:1;12164:16;;:2;:16;;;;12156:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12236:16;12244:7;12236;:16::i;:::-;12235:17;12227:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12296:45;12325:1;12329:2;12333:7;12296:20;:45::i;:::-;12352:30;12374:7;12352:13;:17;12366:2;12352:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;12393:29;12410:7;12419:2;12393:12;:16;;:29;;;;;:::i;:::-;;12463:7;12459:2;12438:33;;12455:1;12438:33;;;;;;;;;;;;12085:393;;:::o;16659:93::-;;;;:::o;3805:127:20:-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4608:523:17:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;6111:725::-;6226:12;6254:7;6250:580;;;6284:10;6277:17;;;;6250:580;6415:1;6395:10;:17;:21;6391:429;;;6653:10;6647:17;6713:15;6700:10;6696:2;6692:19;6685:44;6602:145;6792:12;6785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6111:725;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.7.0;\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"./ERC20Interface.sol\";\nimport \"./MinterRegistry.sol\";\n//import \"../node_modules/@openzeppelin/contracts/math/SafeMath.sol\";\n\ncontract NFTDocumentMinter is ERC721Pausable, MinterRegistry {\n \n    using Counters for Counters.Counter;\n    using SafeMath for uint;\n    Counters.Counter private _tokenIds;\n    address public owner;\n    uint256 public protocolServiceFee;\n    uint256 public mintingServiceFee;\n    address public mintedBy;\n    ERC20Interface public daiToken;\n    address public protocolPaymentAddress;\n    address public minterPaymentAddress;\n\n    // DID: https://blog.ceramic.network/how-to-store-encrypted-secrets-using-idx/\n    // MINTED: Must encrypt using DID, and then upload new document which will be tokenize\n    // NFT Manager locks again to secure \n    // BURN_SWAP: Reads token uri from IPLD, and decrypts with DID\n    // todo:  mapping de flow (REQUEST_MINTING, MINTED, BURN_SWAP)\n    event BurnSwap(\n        address minter,\n        address from,\n        uint id\n    );\n\n    /**\n    * TODO\n     */\n    constructor(\n        address _owner,\n        address _mintedBy,\n        string memory name,\n        string memory symbol,\n        /*uint serviceFee,\n        uint protocolFee,\n        address paymentAddress,\n        address factoryPaymentAddress,*/\n        ERC20Interface paymentToken\n    ) public ERC721(name, symbol) {\n        owner = _owner;\n        mintedBy = _mintedBy;\n        daiToken = paymentToken;\n        /*mintingServiceFee = serviceFee;\n        protocolServiceFee = protocolFee;\n        minterPaymentAddress = paymentAddress;\n        protocolPaymentAddress = factoryPaymentAddress;*/\n    }\n   \n    function mint(address user, string memory tokenURI)\n        public\n        returns (uint256)\n    {\n        require(mintedBy == msg.sender, \"INVALID MINTER\");\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _safeMint(user, newItemId);\n        _setTokenURI(newItemId, tokenURI);\n\n        // TODO desplegar el fee de burn\n        uint index = minterDocumentRequestCounter[address(this)];\n        minterDocumentRequests[index].status = uint(DocumentMintingRequestStatus.MINTED);\n\n\n\n        return newItemId;\n    }   \n\n    function burn(uint tokenId)\n        public\n        payable\n        returns (bool)\n    {\n\n        // User must have a balance\n        require(\n            daiToken.balanceOf(msg.sender) >= 0,\n            \"Invalid token balance\"\n        );\n        // User must have an allowance\n        require(\n            daiToken.allowance(msg.sender, address(this)) >= 0,\n            \"Invalid token allowance\"\n        );\n\n        /* require(\n            daiToken.balanceOf(msg.sender) == (mintingServiceFee.sum(protocolServiceFee)), \n            \"MUST SEND FEE BEFORE USE\");\n        */\n\n        uint index = minterCounter[address(this)];\n        DataProviderMinter memory dataProvider = dataProviderMinters[index];\n        \n        _burn(tokenId);\n\n        // TODO: Update accounting\n        //  - create mappings to data provider accounting\n        //  - create mappings to protocol fee accounting\n\n        // Transfer tokens to NFT owner\n        require(\n            daiToken.transferFrom(\n                msg.sender, \n                dataProvider.paymentAddress, \n                dataProvider.feeStructure),\n            \"Transfer failed for base token\"\n        );\n\n        // Transfer tokens to pay service fee\n        require(\n            daiToken.transferFrom(\n                msg.sender, \n                dataProvider.factoryAddress, \n                dataProvider.serviceFee),\n            \"Transfer failed for base token\"\n        );\n\n        // TODO desplegar el fee de burn\n        uint _index = minterDocumentRequestCounter[address(this)];\n        minterDocumentRequests[_index].status = uint(DocumentMintingRequestStatus.BURNED);\n        \n        emit BurnSwap(\n            address(this),\n            msg.sender,\n            tokenId\n        );\n\n        return true;\n    }       \n\n      function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal virtual override\n    {\n        super._beforeTokenTransfer(from, to, amount);\n\n//        require(_validRecipient(to), \"ERC20WithSafeTransfer: invalid recipient\");\n    }\n\n}",
  "sourcePath": "/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/NFTDocumentMinter.sol",
  "ast": {
    "absolutePath": "/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/NFTDocumentMinter.sol",
    "exportedSymbols": {
      "Address": [
        3074
      ],
      "Context": [
        1297
      ],
      "Counters": [
        3124
      ],
      "ERC165": [
        1354
      ],
      "ERC20Interface": [
        644
      ],
      "ERC721": [
        2571
      ],
      "ERC721Burnable": [
        2601
      ],
      "ERC721Pausable": [
        2638
      ],
      "EnumerableMap": [
        3579
      ],
      "EnumerableSet": [
        4059
      ],
      "IERC165": [
        1366
      ],
      "IERC20": [
        1640
      ],
      "IERC721": [
        2754
      ],
      "IERC721Enumerable": [
        2785
      ],
      "IERC721Metadata": [
        2812
      ],
      "IERC721Receiver": [
        2830
      ],
      "MinterRegistry": [
        778
      ],
      "NFTDocumentMinter": [
        1043
      ],
      "Pausable": [
        4149
      ],
      "SafeMath": [
        1562
      ],
      "Strings": [
        4236
      ]
    },
    "id": 1044,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 780,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 781,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 2572,
        "src": "24:57:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 782,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 2602,
        "src": "82:65:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
        "id": 783,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 2639,
        "src": "148:65:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 784,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 3125,
        "src": "214:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/ERC20Interface.sol",
        "file": "./ERC20Interface.sol",
        "id": 785,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 645,
        "src": "267:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/MinterRegistry.sol",
        "file": "./MinterRegistry.sol",
        "id": 786,
        "nodeType": "ImportDirective",
        "scope": 1044,
        "sourceUnit": 779,
        "src": "298:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 787,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2638,
              "src": "430:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$2638",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 788,
            "nodeType": "InheritanceSpecifier",
            "src": "430:14:3"
          },
          {
            "baseName": {
              "id": 789,
              "name": "MinterRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 778,
              "src": "446:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRegistry_$778",
                "typeString": "contract MinterRegistry"
              }
            },
            "id": 790,
            "nodeType": "InheritanceSpecifier",
            "src": "446:14:3"
          }
        ],
        "contractDependencies": [
          778,
          1297,
          1354,
          1366,
          2571,
          2638,
          2754,
          2785,
          2812,
          4149
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1043,
        "linearizedBaseContracts": [
          1043,
          778,
          2638,
          4149,
          2571,
          2785,
          2812,
          2754,
          1354,
          1366,
          1297
        ],
        "name": "NFTDocumentMinter",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 793,
            "libraryName": {
              "id": 791,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3124,
              "src": "475:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$3124",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "469:36:3",
            "typeName": {
              "id": 792,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3084,
              "src": "488:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3084_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 796,
            "libraryName": {
              "id": 794,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1562,
              "src": "516:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1562",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "510:24:3",
            "typeName": {
              "id": 795,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "529:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 798,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 1043,
            "src": "539:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$3084_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 797,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3084,
              "src": "539:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3084_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 800,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 1043,
            "src": "579:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 799,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "579:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7285e3b9",
            "id": 802,
            "mutability": "mutable",
            "name": "protocolServiceFee",
            "nodeType": "VariableDeclaration",
            "scope": 1043,
            "src": "605:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 801,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01609fd3",
            "id": 804,
            "mutability": "mutable",
            "name": "mintingServiceFee",
            "nodeType": "VariableDeclaration",
            "scope": 1043,
            "src": "644:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 803,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "644:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "deb6ce31",
            "id": 806,
            "mutability": "mutable",
            "name": "mintedBy",
            "nodeType": "VariableDeclaration",
            "scope": 1043,
            "src": "682:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 805,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "682:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 808,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 1043,
            "src": "711:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Interface_$644",
              "typeString": "contract ERC20Interface"
            },
            "typeName": {
              "id": 807,
              "name": "ERC20Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 644,
              "src": "711:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Interface_$644",
                "typeString": "contract ERC20Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e4691931",
            "id": 810,
            "mutability": "mutable",
            "name": "protocolPaymentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1043,
            "src": "747:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 809,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "747:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6e3e2fa6",
            "id": 812,
            "mutability": "mutable",
            "name": "minterPaymentAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1043,
            "src": "790:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 811,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "790:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 820,
            "name": "BurnSwap",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "1206:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 816,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "1230:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "1252:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1196:69:3"
            },
            "src": "1182:84:3"
          },
          {
            "body": {
              "id": 850,
              "nodeType": "Block",
              "src": "1617:283:3",
              "statements": [
                {
                  "expression": {
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 838,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "1627:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 839,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 823,
                      "src": "1635:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1627:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "1627:14:3"
                },
                {
                  "expression": {
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 842,
                      "name": "mintedBy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 806,
                      "src": "1651:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 843,
                      "name": "_mintedBy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "1662:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1651:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:20:3"
                },
                {
                  "expression": {
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 846,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "1681:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Interface_$644",
                        "typeString": "contract ERC20Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 847,
                      "name": "paymentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "1692:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Interface_$644",
                        "typeString": "contract ERC20Interface"
                      }
                    },
                    "src": "1681:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Interface_$644",
                      "typeString": "contract ERC20Interface"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:23:3"
                }
              ]
            },
            "documentation": {
              "id": 821,
              "nodeType": "StructuredDocumentation",
              "src": "1272:22:3",
              "text": " TODO"
            },
            "id": 851,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 834,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 827,
                    "src": "1603:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 835,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 829,
                    "src": "1609:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 836,
                "modifierName": {
                  "id": 833,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2571,
                  "src": "1596:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$2571_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1596:20:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "1320:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "_mintedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "1344:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "1371:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "1399:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "1555:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Interface_$644",
                    "typeString": "contract ERC20Interface"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "ERC20Interface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 644,
                    "src": "1555:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Interface_$644",
                      "typeString": "contract ERC20Interface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:278:3"
            },
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1617:0:3"
            },
            "scope": 1043,
            "src": "1299:601:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 911,
              "nodeType": "Block",
              "src": "2006:453:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 861,
                          "name": "mintedBy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "2024:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 862,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2036:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2036:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2024:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c4944204d494e544552",
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2048:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d69c712ad86836263317d07425c41fa6d0fe0f0e7bd13e3c815e43e7e484af94",
                          "typeString": "literal_string \"INVALID MINTER\""
                        },
                        "value": "INVALID MINTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d69c712ad86836263317d07425c41fa6d0fe0f0e7bd13e3c815e43e7e484af94",
                          "typeString": "literal_string \"INVALID MINTER\""
                        }
                      ],
                      "id": 860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2016:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:49:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 868,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "2075:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3084_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3107,
                      "src": "2075:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$3084_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3084_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:21:3"
                },
                {
                  "assignments": [
                    874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 874,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 911,
                      "src": "2107:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 873,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2107:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 878,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 875,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "2127:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$3084_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 876,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3095,
                      "src": "2127:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$3084_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3084_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2107:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 880,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "2166:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 881,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "2172:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 879,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2219,
                        2248
                      ],
                      "referencedDeclaration": 2219,
                      "src": "2156:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:26:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 885,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "2205:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 886,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "2216:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 884,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2468,
                      "src": "2192:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:33:3"
                },
                {
                  "assignments": [
                    890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 890,
                      "mutability": "mutable",
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 911,
                      "src": "2277:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 889,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2277:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 897,
                  "initialValue": {
                    "baseExpression": {
                      "id": 891,
                      "name": "minterDocumentRequestCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "2290:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 896,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 894,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2327:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                            "typeString": "contract NFTDocumentMinter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                            "typeString": "contract NFTDocumentMinter"
                          }
                        ],
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2319:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2319:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2319:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2290:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2277:56:3"
                },
                {
                  "expression": {
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 898,
                          "name": "minterDocumentRequests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2343:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DocumentMintingRequest_$686_storage_$",
                            "typeString": "mapping(uint256 => struct MinterRegistry.DocumentMintingRequest storage ref)"
                          }
                        },
                        "id": 900,
                        "indexExpression": {
                          "id": 899,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "2366:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2343:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DocumentMintingRequest_$686_storage",
                          "typeString": "struct MinterRegistry.DocumentMintingRequest storage ref"
                        }
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 683,
                      "src": "2343:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 904,
                            "name": "DocumentMintingRequestStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "2387:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DocumentMintingRequestStatus_$671_$",
                              "typeString": "type(enum MinterRegistry.DocumentMintingRequestStatus)"
                            }
                          },
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MINTED",
                          "nodeType": "MemberAccess",
                          "src": "2387:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DocumentMintingRequestStatus_$671",
                            "typeString": "enum MinterRegistry.DocumentMintingRequestStatus"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_DocumentMintingRequestStatus_$671",
                            "typeString": "enum MinterRegistry.DocumentMintingRequestStatus"
                          }
                        ],
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2382:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 902,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2382:4:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2382:41:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2343:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:80:3"
                },
                {
                  "expression": {
                    "id": 909,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 874,
                    "src": "2443:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 859,
                  "id": 910,
                  "nodeType": "Return",
                  "src": "2436:16:3"
                }
              ]
            },
            "functionSelector": "d0def521",
            "id": 912,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "1923:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1923:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "1937:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1922:38:3"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 912,
                  "src": "1993:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1992:9:3"
            },
            "scope": 1043,
            "src": "1909:550:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "2554:1680:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 922,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2641:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2641:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 920,
                              "name": "daiToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "2622:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Interface_$644",
                                "typeString": "contract ERC20Interface"
                              }
                            },
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 244,
                            "src": "2622:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2622:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2656:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2622:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e2062616c616e6365",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2671:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_094ded2de1a9ffde4d9b9efca996f5eeb36b13240439b29f1fc920b9b72f3c5e",
                          "typeString": "literal_string \"Invalid token balance\""
                        },
                        "value": "Invalid token balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_094ded2de1a9ffde4d9b9efca996f5eeb36b13240439b29f1fc920b9b72f3c5e",
                          "typeString": "literal_string \"Invalid token balance\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2601:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:103:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "2601:103:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 933,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2793:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2793:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 937,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2813:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                                    "typeString": "contract NFTDocumentMinter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                                    "typeString": "contract NFTDocumentMinter"
                                  }
                                ],
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2805:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 935,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2805:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2805:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 931,
                              "name": "daiToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "2774:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Interface_$644",
                                "typeString": "contract ERC20Interface"
                              }
                            },
                            "id": 932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 283,
                            "src": "2774:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2774:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2823:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2774:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e20616c6c6f77616e6365",
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2838:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f12245c45b2547d4b9dd5592178ebe47f929c912ce31a258bdebec73fe791605",
                          "typeString": "literal_string \"Invalid token allowance\""
                        },
                        "value": "Invalid token allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f12245c45b2547d4b9dd5592178ebe47f929c912ce31a258bdebec73fe791605",
                          "typeString": "literal_string \"Invalid token allowance\""
                        }
                      ],
                      "id": 930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2753:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2753:120:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:120:3"
                },
                {
                  "assignments": [
                    946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 946,
                      "mutability": "mutable",
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "3049:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 945,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3049:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 953,
                  "initialValue": {
                    "baseExpression": {
                      "id": 947,
                      "name": "minterCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "3062:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 952,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 950,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3084:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                            "typeString": "contract NFTDocumentMinter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                            "typeString": "contract NFTDocumentMinter"
                          }
                        ],
                        "id": 949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3076:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3076:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3076:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3062:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3049:41:3"
                },
                {
                  "assignments": [
                    955
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 955,
                      "mutability": "mutable",
                      "name": "dataProvider",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "3100:38:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DataProviderMinter_$707_memory_ptr",
                        "typeString": "struct MinterRegistry.DataProviderMinter"
                      },
                      "typeName": {
                        "id": 954,
                        "name": "DataProviderMinter",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 707,
                        "src": "3100:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DataProviderMinter_$707_storage_ptr",
                          "typeString": "struct MinterRegistry.DataProviderMinter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 959,
                  "initialValue": {
                    "baseExpression": {
                      "id": 956,
                      "name": "dataProviderMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "3141:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DataProviderMinter_$707_storage_$",
                        "typeString": "mapping(uint256 => struct MinterRegistry.DataProviderMinter storage ref)"
                      }
                    },
                    "id": 958,
                    "indexExpression": {
                      "id": 957,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "3161:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3141:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DataProviderMinter_$707_storage",
                      "typeString": "struct MinterRegistry.DataProviderMinter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3100:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 961,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "3192:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 960,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2375,
                      "src": "3186:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:14:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 967,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3462:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3462:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "expression": {
                              "id": 969,
                              "name": "dataProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "3491:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataProviderMinter_$707_memory_ptr",
                                "typeString": "struct MinterRegistry.DataProviderMinter memory"
                              }
                            },
                            "id": 970,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymentAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 694,
                            "src": "3491:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 971,
                              "name": "dataProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "3537:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataProviderMinter_$707_memory_ptr",
                                "typeString": "struct MinterRegistry.DataProviderMinter memory"
                              }
                            },
                            "id": 972,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeStructure",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 698,
                            "src": "3537:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 965,
                            "name": "daiToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "3423:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Interface_$644",
                              "typeString": "contract ERC20Interface"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "3423:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3423:140:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c656420666f72206261736520746f6b656e",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3577:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9326032fd250ba0467a0b7632a0558e9797d8553caa1b8cbde3251672348a31c",
                          "typeString": "literal_string \"Transfer failed for base token\""
                        },
                        "value": "Transfer failed for base token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9326032fd250ba0467a0b7632a0558e9797d8553caa1b8cbde3251672348a31c",
                          "typeString": "literal_string \"Transfer failed for base token\""
                        }
                      ],
                      "id": 964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3402:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3402:217:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "3402:217:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 980,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3736:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3736:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "expression": {
                              "id": 982,
                              "name": "dataProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "3765:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataProviderMinter_$707_memory_ptr",
                                "typeString": "struct MinterRegistry.DataProviderMinter memory"
                              }
                            },
                            "id": 983,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "factoryAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "3765:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 984,
                              "name": "dataProvider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "3811:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DataProviderMinter_$707_memory_ptr",
                                "typeString": "struct MinterRegistry.DataProviderMinter memory"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "serviceFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 702,
                            "src": "3811:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 978,
                            "name": "daiToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "3697:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Interface_$644",
                              "typeString": "contract ERC20Interface"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "3697:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3697:138:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c656420666f72206261736520746f6b656e",
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3849:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9326032fd250ba0467a0b7632a0558e9797d8553caa1b8cbde3251672348a31c",
                          "typeString": "literal_string \"Transfer failed for base token\""
                        },
                        "value": "Transfer failed for base token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9326032fd250ba0467a0b7632a0558e9797d8553caa1b8cbde3251672348a31c",
                          "typeString": "literal_string \"Transfer failed for base token\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3676:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3676:215:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "3676:215:3"
                },
                {
                  "assignments": [
                    991
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 991,
                      "mutability": "mutable",
                      "name": "_index",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "3943:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 990,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3943:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 998,
                  "initialValue": {
                    "baseExpression": {
                      "id": 992,
                      "name": "minterDocumentRequestCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "3957:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 997,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 995,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3994:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                            "typeString": "contract NFTDocumentMinter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                            "typeString": "contract NFTDocumentMinter"
                          }
                        ],
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3986:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 993,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3986:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3986:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3957:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3943:57:3"
                },
                {
                  "expression": {
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 999,
                          "name": "minterDocumentRequests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "4010:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DocumentMintingRequest_$686_storage_$",
                            "typeString": "mapping(uint256 => struct MinterRegistry.DocumentMintingRequest storage ref)"
                          }
                        },
                        "id": 1001,
                        "indexExpression": {
                          "id": 1000,
                          "name": "_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 991,
                          "src": "4033:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4010:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DocumentMintingRequest_$686_storage",
                          "typeString": "struct MinterRegistry.DocumentMintingRequest storage ref"
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 683,
                      "src": "4010:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1005,
                            "name": "DocumentMintingRequestStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "4055:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DocumentMintingRequestStatus_$671_$",
                              "typeString": "type(enum MinterRegistry.DocumentMintingRequestStatus)"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BURNED",
                          "nodeType": "MemberAccess",
                          "src": "4055:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DocumentMintingRequestStatus_$671",
                            "typeString": "enum MinterRegistry.DocumentMintingRequestStatus"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_DocumentMintingRequestStatus_$671",
                            "typeString": "enum MinterRegistry.DocumentMintingRequestStatus"
                          }
                        ],
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4050:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4050:4:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4050:41:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4010:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1009,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:81:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1013,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4145:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                              "typeString": "contract NFTDocumentMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                              "typeString": "contract NFTDocumentMinter"
                            }
                          ],
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4137:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1011,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4137:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4137:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1015,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4164:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4164:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1017,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "4188:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1010,
                      "name": "BurnSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "4115:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4115:90:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "EmitStatement",
                  "src": "4110:95:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4223:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 918,
                  "id": 1021,
                  "nodeType": "Return",
                  "src": "4216:11:3"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 1023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "2482:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2482:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2481:14:3"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "2544:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2543:6:3"
            },
            "scope": 1043,
            "src": "2468:1766:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2637
            ],
            "body": {
              "id": 1041,
              "nodeType": "Block",
              "src": "4359:146:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1036,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "4396:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1037,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "4402:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1038,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "4406:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1033,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4369:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTDocumentMinter_$1043",
                          "typeString": "contract super NFTDocumentMinter"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2637,
                      "src": "4369:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:44:3"
                }
              ]
            },
            "id": 1042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1031,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4346:8:3"
            },
            "parameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "4279:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "4293:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4293:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "4305:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4305:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4278:42:3"
            },
            "returnParameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:0:3"
            },
            "scope": 1043,
            "src": "4249:256:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1044,
        "src": "400:4108:3"
      }
    ],
    "src": "0:4508:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/NFTDocumentMinter.sol",
      "exportedSymbols": {
        "Address": [
          3074
        ],
        "Context": [
          1297
        ],
        "Counters": [
          3124
        ],
        "ERC165": [
          1354
        ],
        "ERC20Interface": [
          644
        ],
        "ERC721": [
          2571
        ],
        "ERC721Burnable": [
          2601
        ],
        "ERC721Pausable": [
          2638
        ],
        "EnumerableMap": [
          3579
        ],
        "EnumerableSet": [
          4059
        ],
        "IERC165": [
          1366
        ],
        "IERC20": [
          1640
        ],
        "IERC721": [
          2754
        ],
        "IERC721Enumerable": [
          2785
        ],
        "IERC721Metadata": [
          2812
        ],
        "IERC721Receiver": [
          2830
        ],
        "MinterRegistry": [
          778
        ],
        "NFTDocumentMinter": [
          1043
        ],
        "Pausable": [
          4149
        ],
        "SafeMath": [
          1562
        ],
        "Strings": [
          4236
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 780,
        "name": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 2572,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "scope": 1044,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 781,
        "name": "ImportDirective",
        "src": "24:57:3"
      },
      {
        "attributes": {
          "SourceUnit": 2602,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
          "file": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
          "scope": 1044,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 782,
        "name": "ImportDirective",
        "src": "82:65:3"
      },
      {
        "attributes": {
          "SourceUnit": 2639,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
          "file": "@openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
          "scope": 1044,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 783,
        "name": "ImportDirective",
        "src": "148:65:3"
      },
      {
        "attributes": {
          "SourceUnit": 3125,
          "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
          "file": "@openzeppelin/contracts/utils/Counters.sol",
          "scope": 1044,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 784,
        "name": "ImportDirective",
        "src": "214:52:3"
      },
      {
        "attributes": {
          "SourceUnit": 645,
          "absolutePath": "/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/ERC20Interface.sol",
          "file": "./ERC20Interface.sol",
          "scope": 1044,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 785,
        "name": "ImportDirective",
        "src": "267:30:3"
      },
      {
        "attributes": {
          "SourceUnit": 779,
          "absolutePath": "/home/esfera-ubuntu/Documents/projects/ifesa/nft-document-swap/contracts/MinterRegistry.sol",
          "file": "./MinterRegistry.sol",
          "scope": 1044,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 786,
        "name": "ImportDirective",
        "src": "298:30:3"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            778,
            1297,
            1354,
            1366,
            2571,
            2638,
            2754,
            2785,
            2812,
            4149
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1043,
            778,
            2638,
            4149,
            2571,
            2785,
            2812,
            2754,
            1354,
            1366,
            1297
          ],
          "name": "NFTDocumentMinter",
          "scope": 1044
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC721Pausable",
                  "referencedDeclaration": 2638,
                  "type": "contract ERC721Pausable"
                },
                "id": 787,
                "name": "UserDefinedTypeName",
                "src": "430:14:3"
              }
            ],
            "id": 788,
            "name": "InheritanceSpecifier",
            "src": "430:14:3"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MinterRegistry",
                  "referencedDeclaration": 778,
                  "type": "contract MinterRegistry"
                },
                "id": 789,
                "name": "UserDefinedTypeName",
                "src": "446:14:3"
              }
            ],
            "id": 790,
            "name": "InheritanceSpecifier",
            "src": "446:14:3"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "Counters",
                  "referencedDeclaration": 3124,
                  "type": "library Counters"
                },
                "id": 791,
                "name": "UserDefinedTypeName",
                "src": "475:8:3"
              },
              {
                "attributes": {
                  "name": "Counters.Counter",
                  "referencedDeclaration": 3084,
                  "type": "struct Counters.Counter"
                },
                "id": 792,
                "name": "UserDefinedTypeName",
                "src": "488:16:3"
              }
            ],
            "id": 793,
            "name": "UsingForDirective",
            "src": "469:36:3"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 1562,
                  "type": "library SafeMath"
                },
                "id": 794,
                "name": "UserDefinedTypeName",
                "src": "516:8:3"
              },
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 795,
                "name": "ElementaryTypeName",
                "src": "529:4:3"
              }
            ],
            "id": 796,
            "name": "UsingForDirective",
            "src": "510:24:3"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_tokenIds",
              "scope": 1043,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct Counters.Counter",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "Counters.Counter",
                  "referencedDeclaration": 3084,
                  "type": "struct Counters.Counter"
                },
                "id": 797,
                "name": "UserDefinedTypeName",
                "src": "539:16:3"
              }
            ],
            "id": 798,
            "name": "VariableDeclaration",
            "src": "539:34:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "8da5cb5b",
              "mutability": "mutable",
              "name": "owner",
              "scope": 1043,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 799,
                "name": "ElementaryTypeName",
                "src": "579:7:3"
              }
            ],
            "id": 800,
            "name": "VariableDeclaration",
            "src": "579:20:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "7285e3b9",
              "mutability": "mutable",
              "name": "protocolServiceFee",
              "scope": 1043,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 801,
                "name": "ElementaryTypeName",
                "src": "605:7:3"
              }
            ],
            "id": 802,
            "name": "VariableDeclaration",
            "src": "605:33:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "01609fd3",
              "mutability": "mutable",
              "name": "mintingServiceFee",
              "scope": 1043,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 803,
                "name": "ElementaryTypeName",
                "src": "644:7:3"
              }
            ],
            "id": 804,
            "name": "VariableDeclaration",
            "src": "644:32:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "deb6ce31",
              "mutability": "mutable",
              "name": "mintedBy",
              "scope": 1043,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 805,
                "name": "ElementaryTypeName",
                "src": "682:7:3"
              }
            ],
            "id": 806,
            "name": "VariableDeclaration",
            "src": "682:23:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 1043,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ERC20Interface",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ERC20Interface",
                  "referencedDeclaration": 644,
                  "type": "contract ERC20Interface"
                },
                "id": 807,
                "name": "UserDefinedTypeName",
                "src": "711:14:3"
              }
            ],
            "id": 808,
            "name": "VariableDeclaration",
            "src": "711:30:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "e4691931",
              "mutability": "mutable",
              "name": "protocolPaymentAddress",
              "scope": 1043,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 809,
                "name": "ElementaryTypeName",
                "src": "747:7:3"
              }
            ],
            "id": 810,
            "name": "VariableDeclaration",
            "src": "747:37:3"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "6e3e2fa6",
              "mutability": "mutable",
              "name": "minterPaymentAddress",
              "scope": 1043,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 811,
                "name": "ElementaryTypeName",
                "src": "790:7:3"
              }
            ],
            "id": 812,
            "name": "VariableDeclaration",
            "src": "790:35:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "BurnSwap"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "minter",
                      "scope": 820,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 813,
                        "name": "ElementaryTypeName",
                        "src": "1206:7:3"
                      }
                    ],
                    "id": 814,
                    "name": "VariableDeclaration",
                    "src": "1206:14:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 820,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 815,
                        "name": "ElementaryTypeName",
                        "src": "1230:7:3"
                      }
                    ],
                    "id": 816,
                    "name": "VariableDeclaration",
                    "src": "1230:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 820,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 817,
                        "name": "ElementaryTypeName",
                        "src": "1252:4:3"
                      }
                    ],
                    "id": 818,
                    "name": "VariableDeclaration",
                    "src": "1252:7:3"
                  }
                ],
                "id": 819,
                "name": "ParameterList",
                "src": "1196:69:3"
              }
            ],
            "id": 820,
            "name": "EventDefinition",
            "src": "1182:84:3"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1043,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " TODO"
                },
                "id": 821,
                "name": "StructuredDocumentation",
                "src": "1272:22:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_owner",
                      "scope": 851,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 822,
                        "name": "ElementaryTypeName",
                        "src": "1320:7:3"
                      }
                    ],
                    "id": 823,
                    "name": "VariableDeclaration",
                    "src": "1320:14:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_mintedBy",
                      "scope": 851,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 824,
                        "name": "ElementaryTypeName",
                        "src": "1344:7:3"
                      }
                    ],
                    "id": 825,
                    "name": "VariableDeclaration",
                    "src": "1344:17:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "scope": 851,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 826,
                        "name": "ElementaryTypeName",
                        "src": "1371:6:3"
                      }
                    ],
                    "id": 827,
                    "name": "VariableDeclaration",
                    "src": "1371:18:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "scope": 851,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 828,
                        "name": "ElementaryTypeName",
                        "src": "1399:6:3"
                      }
                    ],
                    "id": 829,
                    "name": "VariableDeclaration",
                    "src": "1399:20:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "paymentToken",
                      "scope": 851,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ERC20Interface",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ERC20Interface",
                          "referencedDeclaration": 644,
                          "type": "contract ERC20Interface"
                        },
                        "id": 830,
                        "name": "UserDefinedTypeName",
                        "src": "1555:14:3"
                      }
                    ],
                    "id": 831,
                    "name": "VariableDeclaration",
                    "src": "1555:27:3"
                  }
                ],
                "id": 832,
                "name": "ParameterList",
                "src": "1310:278:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 837,
                "name": "ParameterList",
                "src": "1617:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2571,
                      "type": "type(contract ERC721)",
                      "value": "ERC721"
                    },
                    "id": 833,
                    "name": "Identifier",
                    "src": "1596:6:3"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 827,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 834,
                    "name": "Identifier",
                    "src": "1603:4:3"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 829,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 835,
                    "name": "Identifier",
                    "src": "1609:6:3"
                  }
                ],
                "id": 836,
                "name": "ModifierInvocation",
                "src": "1596:20:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 800,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 838,
                            "name": "Identifier",
                            "src": "1627:5:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 823,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 839,
                            "name": "Identifier",
                            "src": "1635:6:3"
                          }
                        ],
                        "id": 840,
                        "name": "Assignment",
                        "src": "1627:14:3"
                      }
                    ],
                    "id": 841,
                    "name": "ExpressionStatement",
                    "src": "1627:14:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 806,
                              "type": "address",
                              "value": "mintedBy"
                            },
                            "id": 842,
                            "name": "Identifier",
                            "src": "1651:8:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 825,
                              "type": "address",
                              "value": "_mintedBy"
                            },
                            "id": 843,
                            "name": "Identifier",
                            "src": "1662:9:3"
                          }
                        ],
                        "id": 844,
                        "name": "Assignment",
                        "src": "1651:20:3"
                      }
                    ],
                    "id": 845,
                    "name": "ExpressionStatement",
                    "src": "1651:20:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20Interface"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 808,
                              "type": "contract ERC20Interface",
                              "value": "daiToken"
                            },
                            "id": 846,
                            "name": "Identifier",
                            "src": "1681:8:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 831,
                              "type": "contract ERC20Interface",
                              "value": "paymentToken"
                            },
                            "id": 847,
                            "name": "Identifier",
                            "src": "1692:12:3"
                          }
                        ],
                        "id": 848,
                        "name": "Assignment",
                        "src": "1681:23:3"
                      }
                    ],
                    "id": 849,
                    "name": "ExpressionStatement",
                    "src": "1681:23:3"
                  }
                ],
                "id": 850,
                "name": "Block",
                "src": "1617:283:3"
              }
            ],
            "id": 851,
            "name": "FunctionDefinition",
            "src": "1299:601:3"
          },
          {
            "attributes": {
              "functionSelector": "d0def521",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1043,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 912,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 852,
                        "name": "ElementaryTypeName",
                        "src": "1923:7:3"
                      }
                    ],
                    "id": 853,
                    "name": "VariableDeclaration",
                    "src": "1923:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenURI",
                      "scope": 912,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 854,
                        "name": "ElementaryTypeName",
                        "src": "1937:6:3"
                      }
                    ],
                    "id": 855,
                    "name": "VariableDeclaration",
                    "src": "1937:22:3"
                  }
                ],
                "id": 856,
                "name": "ParameterList",
                "src": "1922:38:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 912,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 857,
                        "name": "ElementaryTypeName",
                        "src": "1993:7:3"
                      }
                    ],
                    "id": 858,
                    "name": "VariableDeclaration",
                    "src": "1993:7:3"
                  }
                ],
                "id": 859,
                "name": "ParameterList",
                "src": "1992:9:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d69c712ad86836263317d07425c41fa6d0fe0f0e7bd13e3c815e43e7e484af94",
                                  "typeString": "literal_string \"INVALID MINTER\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 860,
                            "name": "Identifier",
                            "src": "2016:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 806,
                                  "type": "address",
                                  "value": "mintedBy"
                                },
                                "id": 861,
                                "name": "Identifier",
                                "src": "2024:8:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 862,
                                    "name": "Identifier",
                                    "src": "2036:3:3"
                                  }
                                ],
                                "id": 863,
                                "name": "MemberAccess",
                                "src": "2036:10:3"
                              }
                            ],
                            "id": 864,
                            "name": "BinaryOperation",
                            "src": "2024:22:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "494e56414c4944204d494e544552",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"INVALID MINTER\"",
                              "value": "INVALID MINTER"
                            },
                            "id": 865,
                            "name": "Literal",
                            "src": "2048:16:3"
                          }
                        ],
                        "id": 866,
                        "name": "FunctionCall",
                        "src": "2016:49:3"
                      }
                    ],
                    "id": 867,
                    "name": "ExpressionStatement",
                    "src": "2016:49:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "increment",
                              "referencedDeclaration": 3107,
                              "type": "function (struct Counters.Counter storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 798,
                                  "type": "struct Counters.Counter storage ref",
                                  "value": "_tokenIds"
                                },
                                "id": 868,
                                "name": "Identifier",
                                "src": "2075:9:3"
                              }
                            ],
                            "id": 870,
                            "name": "MemberAccess",
                            "src": "2075:19:3"
                          }
                        ],
                        "id": 871,
                        "name": "FunctionCall",
                        "src": "2075:21:3"
                      }
                    ],
                    "id": 872,
                    "name": "ExpressionStatement",
                    "src": "2075:21:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        874
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "newItemId",
                          "scope": 911,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 873,
                            "name": "ElementaryTypeName",
                            "src": "2107:7:3"
                          }
                        ],
                        "id": 874,
                        "name": "VariableDeclaration",
                        "src": "2107:17:3"
                      },
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "current",
                              "referencedDeclaration": 3095,
                              "type": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 798,
                                  "type": "struct Counters.Counter storage ref",
                                  "value": "_tokenIds"
                                },
                                "id": 875,
                                "name": "Identifier",
                                "src": "2127:9:3"
                              }
                            ],
                            "id": 876,
                            "name": "MemberAccess",
                            "src": "2127:17:3"
                          }
                        ],
                        "id": 877,
                        "name": "FunctionCall",
                        "src": "2127:19:3"
                      }
                    ],
                    "id": 878,
                    "name": "VariableDeclarationStatement",
                    "src": "2107:39:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                2219,
                                2248
                              ],
                              "referencedDeclaration": 2219,
                              "type": "function (address,uint256)",
                              "value": "_safeMint"
                            },
                            "id": 879,
                            "name": "Identifier",
                            "src": "2156:9:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 853,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 880,
                            "name": "Identifier",
                            "src": "2166:4:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 874,
                              "type": "uint256",
                              "value": "newItemId"
                            },
                            "id": 881,
                            "name": "Identifier",
                            "src": "2172:9:3"
                          }
                        ],
                        "id": 882,
                        "name": "FunctionCall",
                        "src": "2156:26:3"
                      }
                    ],
                    "id": 883,
                    "name": "ExpressionStatement",
                    "src": "2156:26:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2468,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 884,
                            "name": "Identifier",
                            "src": "2192:12:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 874,
                              "type": "uint256",
                              "value": "newItemId"
                            },
                            "id": 885,
                            "name": "Identifier",
                            "src": "2205:9:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 855,
                              "type": "string memory",
                              "value": "tokenURI"
                            },
                            "id": 886,
                            "name": "Identifier",
                            "src": "2216:8:3"
                          }
                        ],
                        "id": 887,
                        "name": "FunctionCall",
                        "src": "2192:33:3"
                      }
                    ],
                    "id": 888,
                    "name": "ExpressionStatement",
                    "src": "2192:33:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        890
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "index",
                          "scope": 911,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 889,
                            "name": "ElementaryTypeName",
                            "src": "2277:4:3"
                          }
                        ],
                        "id": 890,
                        "name": "VariableDeclaration",
                        "src": "2277:10:3"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 663,
                              "type": "mapping(address => uint256)",
                              "value": "minterDocumentRequestCounter"
                            },
                            "id": 891,
                            "name": "Identifier",
                            "src": "2290:28:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                                      "typeString": "contract NFTDocumentMinter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 892,
                                    "name": "ElementaryTypeName",
                                    "src": "2319:7:3"
                                  }
                                ],
                                "id": 893,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2319:7:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract NFTDocumentMinter",
                                  "value": "this"
                                },
                                "id": 894,
                                "name": "Identifier",
                                "src": "2327:4:3"
                              }
                            ],
                            "id": 895,
                            "name": "FunctionCall",
                            "src": "2319:13:3"
                          }
                        ],
                        "id": 896,
                        "name": "IndexAccess",
                        "src": "2290:43:3"
                      }
                    ],
                    "id": 897,
                    "name": "VariableDeclarationStatement",
                    "src": "2277:56:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 683,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct MinterRegistry.DocumentMintingRequest storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 667,
                                      "type": "mapping(uint256 => struct MinterRegistry.DocumentMintingRequest storage ref)",
                                      "value": "minterDocumentRequests"
                                    },
                                    "id": 898,
                                    "name": "Identifier",
                                    "src": "2343:22:3"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 890,
                                      "type": "uint256",
                                      "value": "index"
                                    },
                                    "id": 899,
                                    "name": "Identifier",
                                    "src": "2366:5:3"
                                  }
                                ],
                                "id": 900,
                                "name": "IndexAccess",
                                "src": "2343:29:3"
                              }
                            ],
                            "id": 901,
                            "name": "MemberAccess",
                            "src": "2343:36:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_DocumentMintingRequestStatus_$671",
                                      "typeString": "enum MinterRegistry.DocumentMintingRequestStatus"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 902,
                                    "name": "ElementaryTypeName",
                                    "src": "2382:4:3"
                                  }
                                ],
                                "id": 903,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2382:4:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "MINTED",
                                  "type": "enum MinterRegistry.DocumentMintingRequestStatus"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 671,
                                      "type": "type(enum MinterRegistry.DocumentMintingRequestStatus)",
                                      "value": "DocumentMintingRequestStatus"
                                    },
                                    "id": 904,
                                    "name": "Identifier",
                                    "src": "2387:28:3"
                                  }
                                ],
                                "id": 905,
                                "name": "MemberAccess",
                                "src": "2387:35:3"
                              }
                            ],
                            "id": 906,
                            "name": "FunctionCall",
                            "src": "2382:41:3"
                          }
                        ],
                        "id": 907,
                        "name": "Assignment",
                        "src": "2343:80:3"
                      }
                    ],
                    "id": 908,
                    "name": "ExpressionStatement",
                    "src": "2343:80:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 859
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 874,
                          "type": "uint256",
                          "value": "newItemId"
                        },
                        "id": 909,
                        "name": "Identifier",
                        "src": "2443:9:3"
                      }
                    ],
                    "id": 910,
                    "name": "Return",
                    "src": "2436:16:3"
                  }
                ],
                "id": 911,
                "name": "Block",
                "src": "2006:453:3"
              }
            ],
            "id": 912,
            "name": "FunctionDefinition",
            "src": "1909:550:3"
          },
          {
            "attributes": {
              "functionSelector": "42966c68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "burn",
              "scope": 1043,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 913,
                        "name": "ElementaryTypeName",
                        "src": "2482:4:3"
                      }
                    ],
                    "id": 914,
                    "name": "VariableDeclaration",
                    "src": "2482:12:3"
                  }
                ],
                "id": 915,
                "name": "ParameterList",
                "src": "2481:14:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 916,
                        "name": "ElementaryTypeName",
                        "src": "2544:4:3"
                      }
                    ],
                    "id": 917,
                    "name": "VariableDeclaration",
                    "src": "2544:4:3"
                  }
                ],
                "id": 918,
                "name": "ParameterList",
                "src": "2543:6:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_094ded2de1a9ffde4d9b9efca996f5eeb36b13240439b29f1fc920b9b72f3c5e",
                                  "typeString": "literal_string \"Invalid token balance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 919,
                            "name": "Identifier",
                            "src": "2601:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "balanceOf",
                                      "referencedDeclaration": 244,
                                      "type": "function (address) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 808,
                                          "type": "contract ERC20Interface",
                                          "value": "daiToken"
                                        },
                                        "id": 920,
                                        "name": "Identifier",
                                        "src": "2622:8:3"
                                      }
                                    ],
                                    "id": 921,
                                    "name": "MemberAccess",
                                    "src": "2622:18:3"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 922,
                                        "name": "Identifier",
                                        "src": "2641:3:3"
                                      }
                                    ],
                                    "id": 923,
                                    "name": "MemberAccess",
                                    "src": "2641:10:3"
                                  }
                                ],
                                "id": 924,
                                "name": "FunctionCall",
                                "src": "2622:30:3"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 925,
                                "name": "Literal",
                                "src": "2656:1:3"
                              }
                            ],
                            "id": 926,
                            "name": "BinaryOperation",
                            "src": "2622:35:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "496e76616c696420746f6b656e2062616c616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Invalid token balance\"",
                              "value": "Invalid token balance"
                            },
                            "id": 927,
                            "name": "Literal",
                            "src": "2671:23:3"
                          }
                        ],
                        "id": 928,
                        "name": "FunctionCall",
                        "src": "2601:103:3"
                      }
                    ],
                    "id": 929,
                    "name": "ExpressionStatement",
                    "src": "2601:103:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f12245c45b2547d4b9dd5592178ebe47f929c912ce31a258bdebec73fe791605",
                                  "typeString": "literal_string \"Invalid token allowance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 930,
                            "name": "Identifier",
                            "src": "2753:7:3"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "allowance",
                                      "referencedDeclaration": 283,
                                      "type": "function (address,address) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 808,
                                          "type": "contract ERC20Interface",
                                          "value": "daiToken"
                                        },
                                        "id": 931,
                                        "name": "Identifier",
                                        "src": "2774:8:3"
                                      }
                                    ],
                                    "id": 932,
                                    "name": "MemberAccess",
                                    "src": "2774:18:3"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 933,
                                        "name": "Identifier",
                                        "src": "2793:3:3"
                                      }
                                    ],
                                    "id": 934,
                                    "name": "MemberAccess",
                                    "src": "2793:10:3"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                                              "typeString": "contract NFTDocumentMinter"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "address"
                                            },
                                            "id": 935,
                                            "name": "ElementaryTypeName",
                                            "src": "2805:7:3"
                                          }
                                        ],
                                        "id": 936,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2805:7:3"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967268,
                                          "type": "contract NFTDocumentMinter",
                                          "value": "this"
                                        },
                                        "id": 937,
                                        "name": "Identifier",
                                        "src": "2813:4:3"
                                      }
                                    ],
                                    "id": 938,
                                    "name": "FunctionCall",
                                    "src": "2805:13:3"
                                  }
                                ],
                                "id": 939,
                                "name": "FunctionCall",
                                "src": "2774:45:3"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 940,
                                "name": "Literal",
                                "src": "2823:1:3"
                              }
                            ],
                            "id": 941,
                            "name": "BinaryOperation",
                            "src": "2774:50:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "496e76616c696420746f6b656e20616c6c6f77616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Invalid token allowance\"",
                              "value": "Invalid token allowance"
                            },
                            "id": 942,
                            "name": "Literal",
                            "src": "2838:25:3"
                          }
                        ],
                        "id": 943,
                        "name": "FunctionCall",
                        "src": "2753:120:3"
                      }
                    ],
                    "id": 944,
                    "name": "ExpressionStatement",
                    "src": "2753:120:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        946
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "index",
                          "scope": 1022,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 945,
                            "name": "ElementaryTypeName",
                            "src": "3049:4:3"
                          }
                        ],
                        "id": 946,
                        "name": "VariableDeclaration",
                        "src": "3049:10:3"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 655,
                              "type": "mapping(address => uint256)",
                              "value": "minterCounter"
                            },
                            "id": 947,
                            "name": "Identifier",
                            "src": "3062:13:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                                      "typeString": "contract NFTDocumentMinter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 948,
                                    "name": "ElementaryTypeName",
                                    "src": "3076:7:3"
                                  }
                                ],
                                "id": 949,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3076:7:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract NFTDocumentMinter",
                                  "value": "this"
                                },
                                "id": 950,
                                "name": "Identifier",
                                "src": "3084:4:3"
                              }
                            ],
                            "id": 951,
                            "name": "FunctionCall",
                            "src": "3076:13:3"
                          }
                        ],
                        "id": 952,
                        "name": "IndexAccess",
                        "src": "3062:28:3"
                      }
                    ],
                    "id": 953,
                    "name": "VariableDeclarationStatement",
                    "src": "3049:41:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        955
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "dataProvider",
                          "scope": 1022,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct MinterRegistry.DataProviderMinter",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "DataProviderMinter",
                              "referencedDeclaration": 707,
                              "type": "struct MinterRegistry.DataProviderMinter"
                            },
                            "id": 954,
                            "name": "UserDefinedTypeName",
                            "src": "3100:18:3"
                          }
                        ],
                        "id": 955,
                        "name": "VariableDeclaration",
                        "src": "3100:38:3"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct MinterRegistry.DataProviderMinter storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 659,
                              "type": "mapping(uint256 => struct MinterRegistry.DataProviderMinter storage ref)",
                              "value": "dataProviderMinters"
                            },
                            "id": 956,
                            "name": "Identifier",
                            "src": "3141:19:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 946,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 957,
                            "name": "Identifier",
                            "src": "3161:5:3"
                          }
                        ],
                        "id": 958,
                        "name": "IndexAccess",
                        "src": "3141:26:3"
                      }
                    ],
                    "id": 959,
                    "name": "VariableDeclarationStatement",
                    "src": "3100:67:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2375,
                              "type": "function (uint256)",
                              "value": "_burn"
                            },
                            "id": 960,
                            "name": "Identifier",
                            "src": "3186:5:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 914,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 961,
                            "name": "Identifier",
                            "src": "3192:7:3"
                          }
                        ],
                        "id": 962,
                        "name": "FunctionCall",
                        "src": "3186:14:3"
                      }
                    ],
                    "id": 963,
                    "name": "ExpressionStatement",
                    "src": "3186:14:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9326032fd250ba0467a0b7632a0558e9797d8553caa1b8cbde3251672348a31c",
                                  "typeString": "literal_string \"Transfer failed for base token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 964,
                            "name": "Identifier",
                            "src": "3402:7:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 342,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 808,
                                      "type": "contract ERC20Interface",
                                      "value": "daiToken"
                                    },
                                    "id": 965,
                                    "name": "Identifier",
                                    "src": "3423:8:3"
                                  }
                                ],
                                "id": 966,
                                "name": "MemberAccess",
                                "src": "3423:21:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 967,
                                    "name": "Identifier",
                                    "src": "3462:3:3"
                                  }
                                ],
                                "id": 968,
                                "name": "MemberAccess",
                                "src": "3462:10:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "paymentAddress",
                                  "referencedDeclaration": 694,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 955,
                                      "type": "struct MinterRegistry.DataProviderMinter memory",
                                      "value": "dataProvider"
                                    },
                                    "id": 969,
                                    "name": "Identifier",
                                    "src": "3491:12:3"
                                  }
                                ],
                                "id": 970,
                                "name": "MemberAccess",
                                "src": "3491:27:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "feeStructure",
                                  "referencedDeclaration": 698,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 955,
                                      "type": "struct MinterRegistry.DataProviderMinter memory",
                                      "value": "dataProvider"
                                    },
                                    "id": 971,
                                    "name": "Identifier",
                                    "src": "3537:12:3"
                                  }
                                ],
                                "id": 972,
                                "name": "MemberAccess",
                                "src": "3537:25:3"
                              }
                            ],
                            "id": 973,
                            "name": "FunctionCall",
                            "src": "3423:140:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5472616e73666572206661696c656420666f72206261736520746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Transfer failed for base token\"",
                              "value": "Transfer failed for base token"
                            },
                            "id": 974,
                            "name": "Literal",
                            "src": "3577:32:3"
                          }
                        ],
                        "id": 975,
                        "name": "FunctionCall",
                        "src": "3402:217:3"
                      }
                    ],
                    "id": 976,
                    "name": "ExpressionStatement",
                    "src": "3402:217:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9326032fd250ba0467a0b7632a0558e9797d8553caa1b8cbde3251672348a31c",
                                  "typeString": "literal_string \"Transfer failed for base token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 977,
                            "name": "Identifier",
                            "src": "3676:7:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 342,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 808,
                                      "type": "contract ERC20Interface",
                                      "value": "daiToken"
                                    },
                                    "id": 978,
                                    "name": "Identifier",
                                    "src": "3697:8:3"
                                  }
                                ],
                                "id": 979,
                                "name": "MemberAccess",
                                "src": "3697:21:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 980,
                                    "name": "Identifier",
                                    "src": "3736:3:3"
                                  }
                                ],
                                "id": 981,
                                "name": "MemberAccess",
                                "src": "3736:10:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "factoryAddress",
                                  "referencedDeclaration": 704,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 955,
                                      "type": "struct MinterRegistry.DataProviderMinter memory",
                                      "value": "dataProvider"
                                    },
                                    "id": 982,
                                    "name": "Identifier",
                                    "src": "3765:12:3"
                                  }
                                ],
                                "id": 983,
                                "name": "MemberAccess",
                                "src": "3765:27:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "serviceFee",
                                  "referencedDeclaration": 702,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 955,
                                      "type": "struct MinterRegistry.DataProviderMinter memory",
                                      "value": "dataProvider"
                                    },
                                    "id": 984,
                                    "name": "Identifier",
                                    "src": "3811:12:3"
                                  }
                                ],
                                "id": 985,
                                "name": "MemberAccess",
                                "src": "3811:23:3"
                              }
                            ],
                            "id": 986,
                            "name": "FunctionCall",
                            "src": "3697:138:3"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5472616e73666572206661696c656420666f72206261736520746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Transfer failed for base token\"",
                              "value": "Transfer failed for base token"
                            },
                            "id": 987,
                            "name": "Literal",
                            "src": "3849:32:3"
                          }
                        ],
                        "id": 988,
                        "name": "FunctionCall",
                        "src": "3676:215:3"
                      }
                    ],
                    "id": 989,
                    "name": "ExpressionStatement",
                    "src": "3676:215:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        991
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "_index",
                          "scope": 1022,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 990,
                            "name": "ElementaryTypeName",
                            "src": "3943:4:3"
                          }
                        ],
                        "id": 991,
                        "name": "VariableDeclaration",
                        "src": "3943:11:3"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 663,
                              "type": "mapping(address => uint256)",
                              "value": "minterDocumentRequestCounter"
                            },
                            "id": 992,
                            "name": "Identifier",
                            "src": "3957:28:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                                      "typeString": "contract NFTDocumentMinter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 993,
                                    "name": "ElementaryTypeName",
                                    "src": "3986:7:3"
                                  }
                                ],
                                "id": 994,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3986:7:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract NFTDocumentMinter",
                                  "value": "this"
                                },
                                "id": 995,
                                "name": "Identifier",
                                "src": "3994:4:3"
                              }
                            ],
                            "id": 996,
                            "name": "FunctionCall",
                            "src": "3986:13:3"
                          }
                        ],
                        "id": 997,
                        "name": "IndexAccess",
                        "src": "3957:43:3"
                      }
                    ],
                    "id": 998,
                    "name": "VariableDeclarationStatement",
                    "src": "3943:57:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 683,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct MinterRegistry.DocumentMintingRequest storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 667,
                                      "type": "mapping(uint256 => struct MinterRegistry.DocumentMintingRequest storage ref)",
                                      "value": "minterDocumentRequests"
                                    },
                                    "id": 999,
                                    "name": "Identifier",
                                    "src": "4010:22:3"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 991,
                                      "type": "uint256",
                                      "value": "_index"
                                    },
                                    "id": 1000,
                                    "name": "Identifier",
                                    "src": "4033:6:3"
                                  }
                                ],
                                "id": 1001,
                                "name": "IndexAccess",
                                "src": "4010:30:3"
                              }
                            ],
                            "id": 1002,
                            "name": "MemberAccess",
                            "src": "4010:37:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_DocumentMintingRequestStatus_$671",
                                      "typeString": "enum MinterRegistry.DocumentMintingRequestStatus"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 1003,
                                    "name": "ElementaryTypeName",
                                    "src": "4050:4:3"
                                  }
                                ],
                                "id": 1004,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4050:4:3"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "BURNED",
                                  "type": "enum MinterRegistry.DocumentMintingRequestStatus"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 671,
                                      "type": "type(enum MinterRegistry.DocumentMintingRequestStatus)",
                                      "value": "DocumentMintingRequestStatus"
                                    },
                                    "id": 1005,
                                    "name": "Identifier",
                                    "src": "4055:28:3"
                                  }
                                ],
                                "id": 1006,
                                "name": "MemberAccess",
                                "src": "4055:35:3"
                              }
                            ],
                            "id": 1007,
                            "name": "FunctionCall",
                            "src": "4050:41:3"
                          }
                        ],
                        "id": 1008,
                        "name": "Assignment",
                        "src": "4010:81:3"
                      }
                    ],
                    "id": 1009,
                    "name": "ExpressionStatement",
                    "src": "4010:81:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 820,
                              "type": "function (address,address,uint256)",
                              "value": "BurnSwap"
                            },
                            "id": 1010,
                            "name": "Identifier",
                            "src": "4115:8:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTDocumentMinter_$1043",
                                      "typeString": "contract NFTDocumentMinter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1011,
                                    "name": "ElementaryTypeName",
                                    "src": "4137:7:3"
                                  }
                                ],
                                "id": 1012,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4137:7:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract NFTDocumentMinter",
                                  "value": "this"
                                },
                                "id": 1013,
                                "name": "Identifier",
                                "src": "4145:4:3"
                              }
                            ],
                            "id": 1014,
                            "name": "FunctionCall",
                            "src": "4137:13:3"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1015,
                                "name": "Identifier",
                                "src": "4164:3:3"
                              }
                            ],
                            "id": 1016,
                            "name": "MemberAccess",
                            "src": "4164:10:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 914,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1017,
                            "name": "Identifier",
                            "src": "4188:7:3"
                          }
                        ],
                        "id": 1018,
                        "name": "FunctionCall",
                        "src": "4115:90:3"
                      }
                    ],
                    "id": 1019,
                    "name": "EmitStatement",
                    "src": "4110:95:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 918
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 1020,
                        "name": "Literal",
                        "src": "4223:4:3"
                      }
                    ],
                    "id": 1021,
                    "name": "Return",
                    "src": "4216:11:3"
                  }
                ],
                "id": 1022,
                "name": "Block",
                "src": "2554:1680:3"
              }
            ],
            "id": 1023,
            "name": "FunctionDefinition",
            "src": "2468:1766:3"
          },
          {
            "attributes": {
              "baseFunctions": [
                2637
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_beforeTokenTransfer",
              "scope": 1043,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 1031,
                "name": "OverrideSpecifier",
                "src": "4346:8:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 1042,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1024,
                        "name": "ElementaryTypeName",
                        "src": "4279:7:3"
                      }
                    ],
                    "id": 1025,
                    "name": "VariableDeclaration",
                    "src": "4279:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1042,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1026,
                        "name": "ElementaryTypeName",
                        "src": "4293:7:3"
                      }
                    ],
                    "id": 1027,
                    "name": "VariableDeclaration",
                    "src": "4293:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1042,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1028,
                        "name": "ElementaryTypeName",
                        "src": "4305:7:3"
                      }
                    ],
                    "id": 1029,
                    "name": "VariableDeclaration",
                    "src": "4305:14:3"
                  }
                ],
                "id": 1030,
                "name": "ParameterList",
                "src": "4278:42:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1032,
                "name": "ParameterList",
                "src": "4359:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 2637,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967271,
                                  "type": "contract super NFTDocumentMinter",
                                  "value": "super"
                                },
                                "id": 1033,
                                "name": "Identifier",
                                "src": "4369:5:3"
                              }
                            ],
                            "id": 1035,
                            "name": "MemberAccess",
                            "src": "4369:26:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1025,
                              "type": "address",
                              "value": "from"
                            },
                            "id": 1036,
                            "name": "Identifier",
                            "src": "4396:4:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1027,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 1037,
                            "name": "Identifier",
                            "src": "4402:2:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1029,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 1038,
                            "name": "Identifier",
                            "src": "4406:6:3"
                          }
                        ],
                        "id": 1039,
                        "name": "FunctionCall",
                        "src": "4369:44:3"
                      }
                    ],
                    "id": 1040,
                    "name": "ExpressionStatement",
                    "src": "4369:44:3"
                  }
                ],
                "id": 1041,
                "name": "Block",
                "src": "4359:146:3"
              }
            ],
            "id": 1042,
            "name": "FunctionDefinition",
            "src": "4249:256:3"
          }
        ],
        "id": 1043,
        "name": "ContractDefinition",
        "src": "400:4108:3"
      }
    ],
    "id": 1044,
    "name": "SourceUnit",
    "src": "0:4508:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-04T23:36:55.399Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "TODO"
      }
    },
    "version": 1
  }
}